{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tidy, util, Tensor, dispose, ENV } from \"@tensorflow/tfjs-core\";\nimport nodeFetch from \"node-fetch\";\n\nvar _extendStatics = function extendStatics(t, r) {\n  return (_extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, r) {\n    t.__proto__ = r;\n  } || function (t, r) {\n    for (var e in r) {\n      r.hasOwnProperty(e) && (t[e] = r[e]);\n    }\n  })(t, r);\n};\n\nfunction __extends(t, r) {\n  function e() {\n    this.constructor = t;\n  }\n\n  _extendStatics(t, r), t.prototype = null === r ? Object.create(r) : (e.prototype = r.prototype, new e());\n}\n\nfunction __awaiter(t, r, e, n) {\n  return new (e || (e = Promise))(function (o, i) {\n    function s(t) {\n      try {\n        u(n.next(t));\n      } catch (t) {\n        i(t);\n      }\n    }\n\n    function a(t) {\n      try {\n        u(n.throw(t));\n      } catch (t) {\n        i(t);\n      }\n    }\n\n    function u(t) {\n      t.done ? o(t.value) : new e(function (r) {\n        r(t.value);\n      }).then(s, a);\n    }\n\n    u((n = n.apply(t, r || [])).next());\n  });\n}\n\nfunction __generator(t, r) {\n  var e,\n      n,\n      o,\n      i,\n      s = {\n    label: 0,\n    sent: function sent() {\n      if (1 & o[0]) throw o[1];\n      return o[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return i = {\n    next: a(0),\n    throw: a(1),\n    return: a(2)\n  }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n    return this;\n  }), i;\n\n  function a(i) {\n    return function (a) {\n      return function (i) {\n        if (e) throw new TypeError(\"Generator is already executing.\");\n\n        for (; s;) {\n          try {\n            if (e = 1, n && (o = 2 & i[0] ? n.return : i[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, i[1])).done) return o;\n\n            switch (n = 0, o && (i = [2 & i[0], o.value]), i[0]) {\n              case 0:\n              case 1:\n                o = i;\n                break;\n\n              case 4:\n                return s.label++, {\n                  value: i[1],\n                  done: !1\n                };\n\n              case 5:\n                s.label++, n = i[1], i = [0];\n                continue;\n\n              case 7:\n                i = s.ops.pop(), s.trys.pop();\n                continue;\n\n              default:\n                if (!(o = (o = s.trys).length > 0 && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {\n                  s = 0;\n                  continue;\n                }\n\n                if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\n                  s.label = i[1];\n                  break;\n                }\n\n                if (6 === i[0] && s.label < o[1]) {\n                  s.label = o[1], o = i;\n                  break;\n                }\n\n                if (o && s.label < o[2]) {\n                  s.label = o[2], s.ops.push(i);\n                  break;\n                }\n\n                o[2] && s.ops.pop(), s.trys.pop();\n                continue;\n            }\n\n            i = r.call(t, s);\n          } catch (t) {\n            i = [6, t], n = 0;\n          } finally {\n            e = o = 0;\n          }\n        }\n\n        if (5 & i[0]) throw i[1];\n        return {\n          value: i[0] ? i[1] : void 0,\n          done: !0\n        };\n      }([i, a]);\n    };\n  }\n}\n\nvar commonjsGlobal = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {};\n\nfunction unwrapExports(t) {\n  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, \"default\") ? t.default : t;\n}\n\nfunction createCommonjsModule(t, r) {\n  return t(r = {\n    exports: {}\n  }, r.exports), r.exports;\n}\n\nvar alea = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.c = t.c, r.s0 = t.s0, r.s1 = t.s1, r.s2 = t.s2, r;\n    }\n\n    function o(t, r) {\n      var e = new function (t) {\n        var r,\n            e = this,\n            n = (r = 4022871197, function (t) {\n          t = t.toString();\n\n          for (var e = 0; e < t.length; e++) {\n            var n = .02519603282416938 * (r += t.charCodeAt(e));\n            n -= r = n >>> 0, r = (n *= r) >>> 0, r += 4294967296 * (n -= r);\n          }\n\n          return 2.3283064365386963e-10 * (r >>> 0);\n        });\n        e.next = function () {\n          var t = 2091639 * e.s0 + 2.3283064365386963e-10 * e.c;\n          return e.s0 = e.s1, e.s1 = e.s2, e.s2 = t - (e.c = 0 | t);\n        }, e.c = 1, e.s0 = n(\" \"), e.s1 = n(\" \"), e.s2 = n(\" \"), e.s0 -= n(t), e.s0 < 0 && (e.s0 += 1), e.s1 -= n(t), e.s1 < 0 && (e.s1 += 1), e.s2 -= n(t), e.s2 < 0 && (e.s2 += 1), n = null;\n      }(t),\n          o = r && r.state,\n          i = e.next;\n      return i.int32 = function () {\n        return 4294967296 * e.next() | 0;\n      }, i.double = function () {\n        return i() + 1.1102230246251565e-16 * (2097152 * i() | 0);\n      }, i.quick = i, o && (\"object\" == typeof o && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.alea = o;\n  }(0, t, !1);\n}),\n    xor128 = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.x = t.x, r.y = t.y, r.z = t.z, r.w = t.w, r;\n    }\n\n    function o(t, r) {\n      var e = new function (t) {\n        var r = this,\n            e = \"\";\n        r.x = 0, r.y = 0, r.z = 0, r.w = 0, r.next = function () {\n          var t = r.x ^ r.x << 11;\n          return r.x = r.y, r.y = r.z, r.z = r.w, r.w ^= r.w >>> 19 ^ t ^ t >>> 8;\n        }, t === (0 | t) ? r.x = t : e += t;\n\n        for (var n = 0; n < e.length + 64; n++) {\n          r.x ^= 0 | e.charCodeAt(n), r.next();\n        }\n      }(t),\n          o = r && r.state,\n          i = function i() {\n        return (e.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((e.next() >>> 11) + (e.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = e.next, i.quick = i, o && (\"object\" == typeof o && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.xor128 = o;\n  }(0, t, !1);\n}),\n    xorwow = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.x = t.x, r.y = t.y, r.z = t.z, r.w = t.w, r.v = t.v, r.d = t.d, r;\n    }\n\n    function o(t, r) {\n      var e = new function (t) {\n        var r = this,\n            e = \"\";\n        r.next = function () {\n          var t = r.x ^ r.x >>> 2;\n          return r.x = r.y, r.y = r.z, r.z = r.w, r.w = r.v, (r.d = r.d + 362437 | 0) + (r.v = r.v ^ r.v << 4 ^ t ^ t << 1) | 0;\n        }, r.x = 0, r.y = 0, r.z = 0, r.w = 0, r.v = 0, t === (0 | t) ? r.x = t : e += t;\n\n        for (var n = 0; n < e.length + 64; n++) {\n          r.x ^= 0 | e.charCodeAt(n), n == e.length && (r.d = r.x << 10 ^ r.x >>> 4), r.next();\n        }\n      }(t),\n          o = r && r.state,\n          i = function i() {\n        return (e.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((e.next() >>> 11) + (e.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = e.next, i.quick = i, o && (\"object\" == typeof o && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.xorwow = o;\n  }(0, t, !1);\n}),\n    xorshift7 = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.x = t.x.slice(), r.i = t.i, r;\n    }\n\n    function o(t, r) {\n      null == t && (t = +new Date());\n\n      var e = new function (t) {\n        var r = this;\n        r.next = function () {\n          var t,\n              e,\n              n = r.x,\n              o = r.i;\n          return t = n[o], e = (t ^= t >>> 7) ^ t << 24, e ^= (t = n[o + 1 & 7]) ^ t >>> 10, e ^= (t = n[o + 3 & 7]) ^ t >>> 3, e ^= (t = n[o + 4 & 7]) ^ t << 7, t = n[o + 7 & 7], e ^= (t ^= t << 13) ^ t << 9, n[o] = e, r.i = o + 1 & 7, e;\n        }, function (t, r) {\n          var e,\n              n = [];\n          if (r === (0 | r)) n[0] = r;else for (r = \"\" + r, e = 0; e < r.length; ++e) {\n            n[7 & e] = n[7 & e] << 15 ^ r.charCodeAt(e) + n[e + 1 & 7] << 13;\n          }\n\n          for (; n.length < 8;) {\n            n.push(0);\n          }\n\n          for (e = 0; e < 8 && 0 === n[e]; ++e) {\n            ;\n          }\n\n          for (8 == e ? n[7] = -1 : n[e], t.x = n, t.i = 0, e = 256; e > 0; --e) {\n            t.next();\n          }\n        }(r, t);\n      }(t),\n          o = r && r.state,\n          i = function i() {\n        return (e.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((e.next() >>> 11) + (e.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = e.next, i.quick = i, o && (o.x && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.xorshift7 = o;\n  }(0, t, !1);\n}),\n    xor4096 = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.i = t.i, r.w = t.w, r.X = t.X.slice(), r;\n    }\n\n    function o(t, r) {\n      null == t && (t = +new Date());\n\n      var e = new function (t) {\n        var r = this;\n        r.next = function () {\n          var t,\n              e,\n              n = r.w,\n              o = r.X,\n              i = r.i;\n          return r.w = n = n + 1640531527 | 0, e = o[i + 34 & 127], t = o[i = i + 1 & 127], e ^= e << 13, t ^= t << 17, e ^= e >>> 15, t ^= t >>> 12, e = o[i] = e ^ t, r.i = i, e + (n ^ n >>> 16) | 0;\n        }, function (t, r) {\n          var e,\n              n,\n              o,\n              i,\n              s,\n              a = [],\n              u = 128;\n\n          for (r === (0 | r) ? (n = r, r = null) : (r += \"\\0\", n = 0, u = Math.max(u, r.length)), o = 0, i = -32; i < u; ++i) {\n            r && (n ^= r.charCodeAt((i + 32) % r.length)), 0 === i && (s = n), n ^= n << 10, n ^= n >>> 15, n ^= n << 4, n ^= n >>> 13, i >= 0 && (s = s + 1640531527 | 0, o = 0 == (e = a[127 & i] ^= n + s) ? o + 1 : 0);\n          }\n\n          for (o >= 128 && (a[127 & (r && r.length || 0)] = -1), o = 127, i = 512; i > 0; --i) {\n            n = a[o + 34 & 127], e = a[o = o + 1 & 127], n ^= n << 13, e ^= e << 17, n ^= n >>> 15, e ^= e >>> 12, a[o] = n ^ e;\n          }\n\n          t.w = s, t.X = a, t.i = o;\n        }(r, t);\n      }(t),\n          o = r && r.state,\n          i = function i() {\n        return (e.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((e.next() >>> 11) + (e.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = e.next, i.quick = i, o && (o.X && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.xor4096 = o;\n  }(0, t, !1);\n}),\n    tychei = createCommonjsModule(function (t) {\n  !function (t, r, e) {\n    function n(t, r) {\n      return r.a = t.a, r.b = t.b, r.c = t.c, r.d = t.d, r;\n    }\n\n    function o(t, r) {\n      var e = new function (t) {\n        var r = this,\n            e = \"\";\n        r.next = function () {\n          var t = r.b,\n              e = r.c,\n              n = r.d,\n              o = r.a;\n          return t = t << 25 ^ t >>> 7 ^ e, e = e - n | 0, n = n << 24 ^ n >>> 8 ^ o, o = o - t | 0, r.b = t = t << 20 ^ t >>> 12 ^ e, r.c = e = e - n | 0, r.d = n << 16 ^ e >>> 16 ^ o, r.a = o - t | 0;\n        }, r.a = 0, r.b = 0, r.c = -1640531527, r.d = 1367130551, t === Math.floor(t) ? (r.a = t / 4294967296 | 0, r.b = 0 | t) : e += t;\n\n        for (var n = 0; n < e.length + 20; n++) {\n          r.b ^= 0 | e.charCodeAt(n), r.next();\n        }\n      }(t),\n          o = r && r.state,\n          i = function i() {\n        return (e.next() >>> 0) / 4294967296;\n      };\n\n      return i.double = function () {\n        do {\n          var t = ((e.next() >>> 11) + (e.next() >>> 0) / 4294967296) / (1 << 21);\n        } while (0 === t);\n\n        return t;\n      }, i.int32 = e.next, i.quick = i, o && (\"object\" == typeof o && n(o, e), i.state = function () {\n        return n(e, {});\n      }), i;\n    }\n\n    r && r.exports ? r.exports = o : e && e.amd ? e(function () {\n      return o;\n    }) : this.tychei = o;\n  }(0, t, !1);\n}),\n    seedrandom = createCommonjsModule(function (t) {\n  !function (r, e) {\n    var n,\n        o = (0, eval)(\"this\"),\n        i = 256,\n        s = 6,\n        a = \"random\",\n        u = e.pow(i, s),\n        h = e.pow(2, 52),\n        c = 2 * h,\n        l = i - 1;\n\n    function f(t, f, v) {\n      var m = [],\n          w = d(function t(r, e) {\n        var n,\n            o = [],\n            i = typeof r;\n        if (e && \"object\" == i) for (n in r) {\n          try {\n            o.push(t(r[n], e - 1));\n          } catch (t) {}\n        }\n        return o.length ? o : \"string\" == i ? r : r + \"\\0\";\n      }((f = 1 == f ? {\n        entropy: !0\n      } : f || {}).entropy ? [t, y(r)] : null == t ? function () {\n        try {\n          var t;\n          return n && (t = n.randomBytes) ? t = t(i) : (t = new Uint8Array(i), (o.crypto || o.msCrypto).getRandomValues(t)), y(t);\n        } catch (t) {\n          var e = o.navigator,\n              s = e && e.plugins;\n          return [+new Date(), o, s, o.screen, y(r)];\n        }\n      }() : t, 3), m),\n          _ = new function (t) {\n        var r,\n            e = t.length,\n            n = this,\n            o = 0,\n            s = n.i = n.j = 0,\n            a = n.S = [];\n        e || (t = [e++]);\n\n        for (; o < i;) {\n          a[o] = o++;\n        }\n\n        for (o = 0; o < i; o++) {\n          a[o] = a[s = l & s + t[o % e] + (r = a[o])], a[s] = r;\n        }\n\n        (n.g = function (t) {\n          for (var r, e = 0, o = n.i, s = n.j, a = n.S; t--;) {\n            r = a[o = l & o + 1], e = e * i + a[l & (a[o] = a[s = l & s + r]) + (a[s] = r)];\n          }\n\n          return n.i = o, n.j = s, e;\n        })(i);\n      }(m),\n          g = function g() {\n        for (var t = _.g(s), r = u, e = 0; t < h;) {\n          t = (t + e) * i, r *= i, e = _.g(1);\n        }\n\n        for (; t >= c;) {\n          t /= 2, r /= 2, e >>>= 1;\n        }\n\n        return (t + e) / r;\n      };\n\n      return g.int32 = function () {\n        return 0 | _.g(4);\n      }, g.quick = function () {\n        return _.g(4) / 4294967296;\n      }, g.double = g, d(y(_.S), r), (f.pass || v || function (t, r, n, o) {\n        return o && (o.S && p(o, _), t.state = function () {\n          return p(_, {});\n        }), n ? (e[a] = t, r) : t;\n      })(g, w, \"global\" in f ? f.global : this == e, f.state);\n    }\n\n    function p(t, r) {\n      return r.i = t.i, r.j = t.j, r.S = t.S.slice(), r;\n    }\n\n    function d(t, r) {\n      for (var e, n = t + \"\", o = 0; o < n.length;) {\n        r[l & o] = l & (e ^= 19 * r[l & o]) + n.charCodeAt(o++);\n      }\n\n      return y(r);\n    }\n\n    function y(t) {\n      return String.fromCharCode.apply(0, t);\n    }\n\n    if (e[\"seed\" + a] = f, d(e.random(), r), t.exports) {\n      t.exports = f;\n\n      try {\n        n = require(\"crypto\");\n      } catch (t) {}\n    } else 0;\n  }([], Math);\n});\nseedrandom.alea = alea, seedrandom.xor128 = xor128, seedrandom.xorwow = xorwow, seedrandom.xorshift7 = xorshift7, seedrandom.xor4096 = xor4096, seedrandom.tychei = tychei;\nvar seedrandom$1 = seedrandom,\n    seedrandom_1 = seedrandom$1.alea,\n    util$1 = createCommonjsModule(function (t, r) {\n  function e(t) {\n    for (var r = t.length, e = 0, n = 0; r > 0;) {\n      n = Math.random() * r | 0, e = t[--r], t[r] = t[n], t[n] = e;\n    }\n  }\n\n  function n(t, r) {\n    if (!t) throw new Error(\"string\" == typeof r ? r : r());\n  }\n\n  function o(t, r) {\n    if (void 0 === r && (r = []), Array.isArray(t)) for (var e = 0; e < t.length; ++e) {\n      o(t[e], r);\n    } else r.push(t);\n    return r;\n  }\n\n  function i(t, r) {\n    if (t === r) return !0;\n    if (null == t || null == r) return !1;\n    if (t.length !== r.length) return !1;\n\n    for (var e = 0; e < t.length; e++) {\n      if (t[e] !== r[e]) return !1;\n    }\n\n    return !0;\n  }\n\n  function s(t, r) {\n    if (\"float32\" !== r) for (var e = 0; e < t.length; e++) {\n      if (isNaN(t[e])) throw Error(\"NaN is not a valid value for dtype: '\" + r + \"'.\");\n    }\n  }\n\n  function a(t) {\n    return \"string\" == typeof t || t instanceof String;\n  }\n\n  function u(t) {\n    return \"boolean\" == typeof t;\n  }\n\n  function h(t) {\n    return \"number\" == typeof t;\n  }\n\n  function c(t, r) {\n    if (null == r || \"float32\" === r || \"complex64\" === r) return new Float32Array(t);\n    if (\"int32\" === r) return new Int32Array(t);\n    if (\"bool\" === r) return new Uint8Array(t);\n    throw new Error(\"Unknown data type \" + r);\n  }\n\n  function l(t) {\n    for (; t instanceof Array;) {\n      t = t[0];\n    }\n\n    return t;\n  }\n\n  Object.defineProperty(r, \"__esModule\", {\n    value: !0\n  }), r.shuffle = e, r.clamp = function (t, r, e) {\n    return Math.max(t, Math.min(r, e));\n  }, r.nearestLargerEven = function (t) {\n    return t % 2 == 0 ? t : t + 1;\n  }, r.sum = function (t) {\n    for (var r = 0, e = 0; e < t.length; e++) {\n      r += t[e];\n    }\n\n    return r;\n  }, r.randUniform = function (t, r) {\n    var e = Math.random();\n    return r * e + (1 - e) * t;\n  }, r.distSquared = function (t, r) {\n    for (var e = 0, n = 0; n < t.length; n++) {\n      var o = Number(t[n]) - Number(r[n]);\n      e += o * o;\n    }\n\n    return e;\n  }, r.assert = n, r.assertShapesMatch = function (t, r, e) {\n    void 0 === e && (e = \"\"), n(i(t, r), e + \" Shapes \" + t + \" and \" + r + \" must match\");\n  }, r.assertNonNull = function (t) {\n    n(null != t, \"The input to the tensor constructor must be a non-null value.\");\n  }, r.flatten = o, r.sizeFromShape = function (t) {\n    if (0 === t.length) return 1;\n\n    for (var r = t[0], e = 1; e < t.length; e++) {\n      r *= t[e];\n    }\n\n    return r;\n  }, r.isScalarShape = function (t) {\n    return 0 === t.length;\n  }, r.arraysEqual = i, r.isInt = function (t) {\n    return t % 1 == 0;\n  }, r.tanh = function (t) {\n    if (null != Math.tanh) return Math.tanh(t);\n    if (t === 1 / 0) return 1;\n    if (t === -1 / 0) return -1;\n    var r = Math.exp(2 * t);\n    return (r - 1) / (r + 1);\n  }, r.sizeToSquarishShape = function (t) {\n    for (var r = Math.floor(Math.sqrt(t)); r > 1; --r) {\n      if (t % r == 0) return [r, t / r];\n    }\n\n    return [1, t];\n  }, r.createShuffledIndices = function (t) {\n    for (var r = new Uint32Array(t), n = 0; n < t; ++n) {\n      r[n] = n;\n    }\n\n    return e(r), r;\n  }, r.rightPad = function (t, r) {\n    return r <= t.length ? t : t + \" \".repeat(r - t.length);\n  }, r.repeatedTry = function (t, r, e) {\n    return void 0 === r && (r = function r(t) {\n      return 0;\n    }), new Promise(function (n, o) {\n      var i = 0,\n          s = function s() {\n        if (t()) n();else {\n          var a = r(++i);\n          null != e && i >= e ? o() : setTimeout(s, a);\n        }\n      };\n\n      s();\n    });\n  }, r.inferFromImplicitShape = function (t, r) {\n    for (var e = 1, n = -1, o = 0; o < t.length; ++o) {\n      if (t[o] >= 0) e *= t[o];else if (-1 === t[o]) {\n        if (-1 !== n) throw Error(\"Shapes can only have 1 implicit size. Found -1 at dim \" + n + \" and dim \" + o);\n        n = o;\n      } else if (t[o] < 0) throw Error(\"Shapes can not be < 0. Found \" + t[o] + \" at dim \" + o);\n    }\n\n    if (-1 === n) {\n      if (r > 0 && r !== e) throw Error(\"Size(\" + r + \") must match the product of shape \" + t);\n      return t;\n    }\n\n    if (0 === e) throw Error(\"Cannot infer the missing size in [\" + t + \"] when there are 0 elements\");\n    if (r % e != 0) throw Error(\"The implicit shape can't be a fractional number. Got \" + r + \" / \" + e);\n    var i = t.slice();\n    return i[n] = r / e, i;\n  }, r.squeezeShape = function (t, r) {\n    for (var e = [], n = [], o = 0, i = 0; i < t.length; ++i) {\n      if (null != r) {\n        if (r[o] === i && 1 !== t[i]) throw new Error(\"Can't squeeze axis \" + i + \" since its dim '\" + t[i] + \"' is not 1\");\n        (null == r[o] || r[o] > i) && 1 === t[i] && (e.push(t[i]), n.push(i)), r[o] <= i && o++;\n      }\n\n      1 !== t[i] && (e.push(t[i]), n.push(i));\n    }\n\n    return {\n      newShape: e,\n      keptDims: n\n    };\n  }, r.getTypedArrayFromDType = function (t, r) {\n    var e = null;\n    if (null == t || \"float32\" === t) e = new Float32Array(r);else if (\"int32\" === t) e = new Int32Array(r);else {\n      if (\"bool\" !== t) throw new Error(\"Unknown data type \" + t);\n      e = new Uint8Array(r);\n    }\n    return e;\n  }, r.getArrayFromDType = function (t, r) {\n    var e = null;\n    if (null == t || \"float32\" === t) e = new Float32Array(r);else if (\"int32\" === t) e = new Int32Array(r);else if (\"bool\" === t) e = new Uint8Array(r);else {\n      if (\"string\" !== t) throw new Error(\"Unknown data type \" + t);\n      e = new Array(r);\n    }\n    return e;\n  }, r.checkComputationForNaN = function (t, r, e) {\n    if (\"float32\" === r) for (var n = 0; n < t.length; n++) {\n      if (isNaN(t[n])) throw Error(\"The result of the '\" + e + \"' has NaNs.\");\n    }\n  }, r.checkConversionForNaN = s, r.hasEncodingLoss = function (t, r) {\n    return !(\"complex64\" === r || \"float32\" === r && \"complex64\" !== t || \"int32\" === r && \"float32\" !== t && \"complex64\" !== t || \"bool\" === r && \"bool\" === t);\n  }, r.isTypedArray = function (t) {\n    return t instanceof Float32Array || t instanceof Int32Array || t instanceof Uint8Array;\n  }, r.bytesPerElement = function (t) {\n    if (\"float32\" === t || \"int32\" === t) return 4;\n    if (\"complex64\" === t) return 8;\n    if (\"bool\" === t) return 1;\n    throw new Error(\"Unknown dtype \" + t);\n  }, r.bytesFromStringArray = function (t) {\n    if (null == t) return 0;\n    var r = 0;\n    return t.forEach(function (t) {\n      return r += 2 * t.length;\n    }), r;\n  }, r.isString = a, r.isBoolean = u, r.isNumber = h, r.inferDtype = function (t) {\n    return t instanceof Float32Array ? \"float32\" : t instanceof Int32Array || t instanceof Uint8Array ? \"int32\" : h(t) || t instanceof Array && h(l(t)) ? \"float32\" : a(t) || t instanceof Array && a(l(t)) ? \"string\" : u(t) || t instanceof Array && u(l(t)) ? \"bool\" : \"float32\";\n  }, r.isFunction = function (t) {\n    return !!(t && t.constructor && t.call && t.apply);\n  }, r.nearestDivisor = function (t, r) {\n    for (var e = r; e < t; ++e) {\n      if (t % e == 0) return e;\n    }\n\n    return t;\n  }, r.computeStrides = function (t) {\n    var r = t.length;\n    if (r < 2) return [];\n    var e = new Array(r - 1);\n    e[r - 2] = t[r - 1];\n\n    for (var n = r - 3; n >= 0; --n) {\n      e[n] = e[n + 1] * t[n + 1];\n    }\n\n    return e;\n  }, r.toTypedArray = function (t, r, e) {\n    if (\"string\" === r) throw new Error(\"Cannot convert a string[] to a TypedArray\");\n    if (function (t, r) {\n      return t instanceof Float32Array && \"float32\" === r || t instanceof Int32Array && \"int32\" === r || t instanceof Uint8Array && \"bool\" === r;\n    }(t, r)) return t;\n    if (Array.isArray(t) && (t = o(t)), null == r || \"float32\" === r || \"complex64\" === r) return new Float32Array(t);\n    if (\"int32\" === r) return e && s(t, r), new Int32Array(t);\n\n    if (\"bool\" === r) {\n      for (var n = new Uint8Array(t.length), i = 0; i < n.length; ++i) {\n        0 !== Math.round(t[i]) && (n[i] = 1);\n      }\n\n      return n;\n    }\n\n    throw new Error(\"Unknown data type \" + r);\n  }, r.makeOnesTypedArray = function (t, r) {\n    for (var e = c(t, r), n = 0; n < e.length; n++) {\n      e[n] = 1;\n    }\n\n    return e;\n  }, r.makeZerosTypedArray = c, r.now = function () {\n    if (\"undefined\" != typeof performance) return performance.now();\n\n    if (\"undefined\" != typeof process) {\n      var t = process.hrtime();\n      return 1e3 * t[0] + t[1] / 1e6;\n    }\n\n    throw new Error(\"Cannot measure time in this environment. You should run tf.js in the browser or in Node.js\");\n  };\n});\nunwrapExports(util$1);\nvar util_1 = util$1.shuffle,\n    util_2 = util$1.clamp,\n    util_3 = util$1.nearestLargerEven,\n    util_4 = util$1.sum,\n    util_5 = util$1.randUniform,\n    util_6 = util$1.distSquared,\n    util_7 = util$1.assert,\n    util_8 = util$1.assertShapesMatch,\n    util_9 = util$1.assertNonNull,\n    util_10 = util$1.flatten,\n    util_11 = util$1.sizeFromShape,\n    util_12 = util$1.isScalarShape,\n    util_13 = util$1.arraysEqual,\n    util_14 = util$1.isInt,\n    util_15 = util$1.tanh,\n    util_16 = util$1.sizeToSquarishShape,\n    util_17 = util$1.createShuffledIndices,\n    util_18 = util$1.rightPad,\n    util_19 = util$1.repeatedTry,\n    util_20 = util$1.inferFromImplicitShape,\n    util_21 = util$1.squeezeShape,\n    util_22 = util$1.getTypedArrayFromDType,\n    util_23 = util$1.getArrayFromDType,\n    util_24 = util$1.checkComputationForNaN,\n    util_25 = util$1.checkConversionForNaN,\n    util_26 = util$1.hasEncodingLoss,\n    util_27 = util$1.isTypedArray,\n    util_28 = util$1.bytesPerElement,\n    util_29 = util$1.bytesFromStringArray,\n    util_30 = util$1.isString,\n    util_31 = util$1.isBoolean,\n    util_32 = util$1.isNumber,\n    util_33 = util$1.inferDtype,\n    util_34 = util$1.isFunction,\n    util_35 = util$1.nearestDivisor,\n    util_36 = util$1.computeStrides,\n    util_37 = util$1.toTypedArray,\n    util_38 = util$1.makeOnesTypedArray,\n    util_39 = util$1.makeZerosTypedArray,\n    util_40 = util$1.now,\n    tensor_format = createCommonjsModule(function (t, r) {\n  Object.defineProperty(r, \"__esModule\", {\n    value: !0\n  });\n  var e = 20,\n      n = 3,\n      o = 7;\n\n  function i(t, r) {\n    var e;\n    return e = Array.isArray(t) ? parseFloat(t[0].toFixed(o)) + \" + \" + parseFloat(t[1].toFixed(o)) + \"j\" : util$1.isString(t) ? \"'\" + t + \"'\" : parseFloat(t.toFixed(o)).toString(), util$1.rightPad(e, r);\n  }\n\n  function s(t) {\n    for (var r = [], e = 0; e < t.length; e += 2) {\n      r.push([t[e], t[e + 1]]);\n    }\n\n    return r;\n  }\n\n  r.tensorToString = function (t, r, o, a) {\n    var u = util$1.computeStrides(r),\n        h = function (t, r, e, n) {\n      var o = util$1.sizeFromShape(r),\n          a = n[n.length - 1],\n          u = new Array(a).fill(0),\n          h = r.length,\n          c = \"complex64\" === e ? s(t) : t;\n      if (h > 1) for (var l = 0; l < o / a; l++) {\n        for (var f = l * a, p = 0; p < a; p++) {\n          u[p] = Math.max(u[p], i(c[f + p], 0).length);\n        }\n      }\n      return u;\n    }(t, r, o, u),\n        c = r.length,\n        l = function t(r, o, a, u, h, c) {\n      void 0 === c && (c = !0);\n      var l = \"complex64\" === a ? 2 : 1,\n          f = o[0],\n          p = o.length;\n\n      if (0 === p) {\n        if (\"complex64\" === a) {\n          var d = s(r);\n          return [i(d[0], 0)];\n        }\n\n        return [r[0].toString()];\n      }\n\n      if (1 === p) {\n        if (f > e) {\n          var y = n * l,\n              v = Array.from(r.slice(0, y)),\n              m = Array.from(r.slice(f - n * l, f));\n          return \"complex64\" === a && (v = s(v), m = s(m)), [\"[\" + v.map(function (t, r) {\n            return i(t, h[r]);\n          }).join(\", \") + \", ..., \" + m.map(function (t, r) {\n            return i(t, h[f - n + r]);\n          }).join(\", \") + \"]\"];\n        }\n\n        var w = \"complex64\" === a ? s(r) : Array.from(r);\n        return [\"[\" + w.map(function (t, r) {\n          return i(t, h[r]);\n        }).join(\", \") + \"]\"];\n      }\n\n      var _ = o.slice(1),\n          g = u.slice(1),\n          I = u[0] * l,\n          b = [];\n\n      if (f > e) {\n        for (var x = 0; x < n; x++) {\n          var S = x * I,\n              D = S + I;\n          b.push.apply(b, t(r.slice(S, D), _, a, g, h, !1));\n        }\n\n        b.push(\"...\");\n\n        for (var x = f - n; x < f; x++) {\n          var S = x * I,\n              D = S + I;\n          b.push.apply(b, t(r.slice(S, D), _, a, g, h, x === f - 1));\n        }\n      } else for (var x = 0; x < f; x++) {\n        var S = x * I,\n            D = S + I;\n        b.push.apply(b, t(r.slice(S, D), _, a, g, h, x === f - 1));\n      }\n\n      var T = 2 === p ? \",\" : \"\";\n      b[0] = \"[\" + b[0] + T;\n\n      for (var x = 1; x < b.length - 1; x++) {\n        b[x] = \" \" + b[x] + T;\n      }\n\n      for (var E = \",\\n\", x = 2; x < p; x++) {\n        E += \"\\n\";\n      }\n\n      return b[b.length - 1] = \" \" + b[b.length - 1] + \"]\" + (c ? \"\" : E), b;\n    }(t, r, o, u, h),\n        f = [\"Tensor\"];\n\n    return a && (f.push(\"  dtype: \" + o), f.push(\"  rank: \" + c), f.push(\"  shape: [\" + r + \"]\"), f.push(\"  values:\")), f.push(l.map(function (t) {\n      return \"    \" + t;\n    }).join(\"\\n\")), f.join(\"\\n\");\n  };\n});\nunwrapExports(tensor_format);\nvar tensor_format_1 = tensor_format.tensorToString,\n    tensor = createCommonjsModule(function (t, r) {\n  var e,\n      n = commonjsGlobal && commonjsGlobal.__extends || (e = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, r) {\n    t.__proto__ = r;\n  } || function (t, r) {\n    for (var e in r) {\n      r.hasOwnProperty(e) && (t[e] = r[e]);\n    }\n  }, function (t, r) {\n    function n() {\n      this.constructor = t;\n    }\n\n    e(t, r), t.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());\n  }),\n      o = commonjsGlobal && commonjsGlobal.__awaiter || function (t, r, e, n) {\n    return new (e || (e = Promise))(function (o, i) {\n      function s(t) {\n        try {\n          u(n.next(t));\n        } catch (t) {\n          i(t);\n        }\n      }\n\n      function a(t) {\n        try {\n          u(n.throw(t));\n        } catch (t) {\n          i(t);\n        }\n      }\n\n      function u(t) {\n        t.done ? o(t.value) : new e(function (r) {\n          r(t.value);\n        }).then(s, a);\n      }\n\n      u((n = n.apply(t, r || [])).next());\n    });\n  },\n      i = commonjsGlobal && commonjsGlobal.__generator || function (t, r) {\n    var e,\n        n,\n        o,\n        i,\n        s = {\n      label: 0,\n      sent: function sent() {\n        if (1 & o[0]) throw o[1];\n        return o[1];\n      },\n      trys: [],\n      ops: []\n    };\n    return i = {\n      next: a(0),\n      throw: a(1),\n      return: a(2)\n    }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n      return this;\n    }), i;\n\n    function a(i) {\n      return function (a) {\n        return function (i) {\n          if (e) throw new TypeError(\"Generator is already executing.\");\n\n          for (; s;) {\n            try {\n              if (e = 1, n && (o = 2 & i[0] ? n.return : i[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, i[1])).done) return o;\n\n              switch (n = 0, o && (i = [2 & i[0], o.value]), i[0]) {\n                case 0:\n                case 1:\n                  o = i;\n                  break;\n\n                case 4:\n                  return s.label++, {\n                    value: i[1],\n                    done: !1\n                  };\n\n                case 5:\n                  s.label++, n = i[1], i = [0];\n                  continue;\n\n                case 7:\n                  i = s.ops.pop(), s.trys.pop();\n                  continue;\n\n                default:\n                  if (!(o = (o = s.trys).length > 0 && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {\n                    s = 0;\n                    continue;\n                  }\n\n                  if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\n                    s.label = i[1];\n                    break;\n                  }\n\n                  if (6 === i[0] && s.label < o[1]) {\n                    s.label = o[1], o = i;\n                    break;\n                  }\n\n                  if (o && s.label < o[2]) {\n                    s.label = o[2], s.ops.push(i);\n                    break;\n                  }\n\n                  o[2] && s.ops.pop(), s.trys.pop();\n                  continue;\n              }\n\n              i = r.call(t, s);\n            } catch (t) {\n              i = [6, t], n = 0;\n            } finally {\n              e = o = 0;\n            }\n          }\n\n          if (5 & i[0]) throw i[1];\n          return {\n            value: i[0] ? i[1] : void 0,\n            done: !0\n          };\n        }([i, a]);\n      };\n    }\n  };\n\n  Object.defineProperty(r, \"__esModule\", {\n    value: !0\n  });\n\n  var s = util$1,\n      a = function () {\n    function t(t, r, e) {\n      if (this.dtype = r, this.shape = t.slice(), this.size = util$1.sizeFromShape(t), null != e) {\n        var n = e.length;\n        util$1.assert(n === this.size, \"Length of values '\" + n + \"' does not match the size inferred by the shape '\" + this.size + \"'.\");\n      }\n\n      if (\"complex64\" === r) throw new Error(\"complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).\");\n      this.values = e || util$1.getArrayFromDType(r, util$1.sizeFromShape(this.shape)), this.strides = s.computeStrides(t);\n    }\n\n    return t.prototype.set = function (t) {\n      for (var r = [], e = 1; e < arguments.length; e++) {\n        r[e - 1] = arguments[e];\n      }\n\n      0 === r.length && (r = [0]), util$1.assert(r.length === this.rank, \"The number of provided coordinates (\" + r.length + \") must match the rank (\" + this.rank + \")\");\n      var n = this.locToIndex(r);\n      this.values[n] = t;\n    }, t.prototype.get = function () {\n      for (var t = [], r = 0; r < arguments.length; r++) {\n        t[r] = arguments[r];\n      }\n\n      0 === t.length && (t = [0]);\n\n      for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n) {\n        e += this.strides[n] * t[n];\n      }\n\n      return this.values[e];\n    }, t.prototype.locToIndex = function (t) {\n      if (0 === this.rank) return 0;\n      if (1 === this.rank) return t[0];\n\n      for (var r = t[t.length - 1], e = 0; e < t.length - 1; ++e) {\n        r += this.strides[e] * t[e];\n      }\n\n      return r;\n    }, t.prototype.indexToLoc = function (t) {\n      if (0 === this.rank) return [];\n      if (1 === this.rank) return [t];\n\n      for (var r = new Array(this.shape.length), e = 0; e < r.length - 1; ++e) {\n        r[e] = Math.floor(t / this.strides[e]), t -= r[e] * this.strides[e];\n      }\n\n      return r[r.length - 1] = t, r;\n    }, Object.defineProperty(t.prototype, \"rank\", {\n      get: function get() {\n        return this.shape.length;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), t.prototype.toTensor = function () {\n      return c.make(this.shape, {\n        values: this.values\n      }, this.dtype);\n    }, t;\n  }();\n\n  r.TensorBuffer = a;\n  var u = null,\n      h = null;\n  r.setTensorTracker = function (t) {\n    u = t;\n  }, r.setOpHandler = function (t) {\n    h = t;\n  };\n\n  var c = function () {\n    function t(t, r, e, n) {\n      this.isDisposedInternal = !1, this.shape = t.slice(), this.dtype = r || \"float32\", this.size = util$1.sizeFromShape(t), null != e && util$1.assert(this.size === e.length, \"Based on the provided shape, [\" + t + \"], and dtype \" + this.dtype + \", the tensor should have \" + this.size + \" values but has \" + e.length), this.strides = s.computeStrides(t), this.dataId = null != n ? n : {}, this.id = u().nextTensorId(), this.rankType = this.rank < 5 ? this.rank.toString() : \"higher\", u().registerTensor(this), null != e && u().write(this.dataId, e);\n    }\n\n    return t.make = function (r, e, n) {\n      return new t(r, n, e.values, e.dataId);\n    }, t.prototype.flatten = function () {\n      return this.throwIfDisposed(), this.as1D();\n    }, t.prototype.asScalar = function () {\n      return this.throwIfDisposed(), util$1.assert(1 === this.size, \"The array must have only 1 element.\"), this.reshape([]);\n    }, t.prototype.as1D = function () {\n      return this.throwIfDisposed(), this.reshape([this.size]);\n    }, t.prototype.as2D = function (t, r) {\n      return this.throwIfDisposed(), this.reshape([t, r]);\n    }, t.prototype.as3D = function (t, r, e) {\n      return this.throwIfDisposed(), this.reshape([t, r, e]);\n    }, t.prototype.as4D = function (t, r, e, n) {\n      return this.throwIfDisposed(), this.reshape([t, r, e, n]);\n    }, t.prototype.asType = function (t) {\n      return this.throwIfDisposed(), h.cast(this, t);\n    }, Object.defineProperty(t.prototype, \"rank\", {\n      get: function get() {\n        return this.shape.length;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), t.prototype.get = function () {\n      for (var t = [], r = 0; r < arguments.length; r++) {\n        t[r] = arguments[r];\n      }\n\n      util$1.assert(t.length === this.rank, \"Number of coordinates in get() must match the rank of the tensor\"), util$1.assert(\"complex64\" !== this.dtype, \"Tensor.get() is not supported for complex64 tensors yet.\"), this.throwIfDisposed(), 0 === t.length && (t = [0]);\n\n      for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n) {\n        e += this.strides[n] * t[n];\n      }\n\n      return this.dataSync()[e];\n    }, t.prototype.buffer = function () {\n      return h.buffer(this.shape, this.dtype, this.dataSync());\n    }, t.prototype.data = function () {\n      return o(this, void 0, void 0, function () {\n        return i(this, function (t) {\n          return this.throwIfDisposed(), [2, u().read(this.dataId)];\n        });\n      });\n    }, t.prototype.dataSync = function () {\n      return this.throwIfDisposed(), u().readSync(this.dataId);\n    }, t.prototype.dispose = function () {\n      this.isDisposed || (u().disposeTensor(this), this.isDisposedInternal = !0);\n    }, Object.defineProperty(t.prototype, \"isDisposed\", {\n      get: function get() {\n        return this.isDisposedInternal;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), t.prototype.throwIfDisposed = function () {\n      if (this.isDisposed) throw new Error(\"Tensor is disposed.\");\n    }, t.prototype.toFloat = function () {\n      return this.asType(\"float32\");\n    }, t.prototype.toInt = function () {\n      return this.asType(\"int32\");\n    }, t.prototype.toBool = function () {\n      return this.asType(\"bool\");\n    }, t.prototype.print = function (t) {\n      return void 0 === t && (t = !1), h.print(this, t);\n    }, t.prototype.reshape = function (t) {\n      return this.throwIfDisposed(), h.reshape(this, t);\n    }, t.prototype.reshapeAs = function (t) {\n      return this.throwIfDisposed(), this.reshape(t.shape);\n    }, t.prototype.expandDims = function (t) {\n      return void 0 === t && (t = 0), h.expandDims(this, t);\n    }, t.prototype.cumsum = function (t, r, e) {\n      return void 0 === t && (t = 0), void 0 === r && (r = !1), void 0 === e && (e = !1), h.cumsum(this, t, r, e);\n    }, t.prototype.squeeze = function (t) {\n      return this.throwIfDisposed(), h.squeeze(this, t);\n    }, t.prototype.clone = function () {\n      return this.throwIfDisposed(), h.clone(this);\n    }, t.prototype.toString = function (t) {\n      void 0 === t && (t = !1);\n      var r = this.dataSync();\n      return tensor_format.tensorToString(r, this.shape, this.dtype, t);\n    }, t.prototype.tile = function (t) {\n      return this.throwIfDisposed(), h.tile(this, t);\n    }, t.prototype.gather = function (t, r) {\n      return void 0 === r && (r = 0), this.throwIfDisposed(), h.gather(this, t, r);\n    }, t.prototype.matMul = function (t, r, e) {\n      return void 0 === r && (r = !1), void 0 === e && (e = !1), this.throwIfDisposed(), h.matMul(this, t, r, e);\n    }, t.prototype.dot = function (t) {\n      return this.throwIfDisposed(), h.dot(this, t);\n    }, t.prototype.norm = function (t, r, e) {\n      return void 0 === t && (t = \"euclidean\"), void 0 === r && (r = null), void 0 === e && (e = !1), this.throwIfDisposed(), h.norm(this, t, r, e);\n    }, t.prototype.slice = function (t, r) {\n      return this.throwIfDisposed(), h.slice(this, t, r);\n    }, t.prototype.reverse = function (t) {\n      return this.throwIfDisposed(), h.reverse(this, t);\n    }, t.prototype.concat = function (r, e) {\n      return void 0 === e && (e = 0), this.throwIfDisposed(), r instanceof t && (r = [r]), h.concat([this].concat(r), e);\n    }, t.prototype.split = function (t, r) {\n      return void 0 === r && (r = 0), this.throwIfDisposed(), h.split(this, t, r);\n    }, t.prototype.stack = function (t, r) {\n      return void 0 === r && (r = 0), h.stack([this, t], r);\n    }, t.prototype.unstack = function (t, r) {\n      return void 0 === r && (r = 0), h.unstack(this, r);\n    }, t.prototype.pad = function (t, r) {\n      return void 0 === r && (r = 0), h.pad(this, t, r);\n    }, t.prototype.batchNormalization = function (t, r, e, n, o) {\n      return void 0 === e && (e = .001), this.throwIfDisposed(), h.batchNormalization(this, t, r, e, n, o);\n    }, t.prototype.all = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.all(this, t, r);\n    }, t.prototype.any = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.any(this, t, r);\n    }, t.prototype.logSumExp = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.logSumExp(this, t, r);\n    }, t.prototype.sum = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.sum(this, t, r);\n    }, t.prototype.prod = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.prod(this, t, r);\n    }, t.prototype.mean = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.mean(this, t, r);\n    }, t.prototype.min = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.min(this, t, r);\n    }, t.prototype.max = function (t, r) {\n      return void 0 === t && (t = null), void 0 === r && (r = !1), this.throwIfDisposed(), h.max(this, t, r);\n    }, t.prototype.argMin = function (t) {\n      return void 0 === t && (t = null), this.throwIfDisposed(), h.argMin(this, t);\n    }, t.prototype.argMax = function (t) {\n      return void 0 === t && (t = null), this.throwIfDisposed(), h.argMax(this, t);\n    }, t.prototype.cast = function (t) {\n      return this.throwIfDisposed(), h.cast(this, t);\n    }, t.prototype.add = function (t) {\n      return this.throwIfDisposed(), h.add(this, t);\n    }, t.prototype.addStrict = function (t) {\n      return this.throwIfDisposed(), h.addStrict(this, t);\n    }, t.prototype.atan2 = function (t) {\n      return this.throwIfDisposed(), h.atan2(this, t);\n    }, t.prototype.sub = function (t) {\n      return this.throwIfDisposed(), h.sub(this, t);\n    }, t.prototype.subStrict = function (t) {\n      return this.throwIfDisposed(), h.subStrict(this, t);\n    }, t.prototype.pow = function (t) {\n      return this.throwIfDisposed(), h.pow(this, t);\n    }, t.prototype.powStrict = function (t) {\n      return this.throwIfDisposed(), h.powStrict(this, t);\n    }, t.prototype.mul = function (t) {\n      return this.throwIfDisposed(), h.mul(this, t);\n    }, t.prototype.mulStrict = function (t) {\n      return this.throwIfDisposed(), h.mulStrict(this, t);\n    }, t.prototype.div = function (t) {\n      return this.throwIfDisposed(), h.div(this, t);\n    }, t.prototype.floorDiv = function (t) {\n      return this.throwIfDisposed(), h.floorDiv(this, t);\n    }, t.prototype.divStrict = function (t) {\n      return this.throwIfDisposed(), h.divStrict(this, t);\n    }, t.prototype.minimum = function (t) {\n      return this.throwIfDisposed(), h.minimum(this, t);\n    }, t.prototype.minimumStrict = function (t) {\n      return this.throwIfDisposed(), h.minimumStrict(this, t);\n    }, t.prototype.maximum = function (t) {\n      return this.throwIfDisposed(), h.maximum(this, t);\n    }, t.prototype.maximumStrict = function (t) {\n      return this.throwIfDisposed(), h.maximumStrict(this, t);\n    }, t.prototype.mod = function (t) {\n      return this.throwIfDisposed(), h.mod(this, t);\n    }, t.prototype.modStrict = function (t) {\n      return this.throwIfDisposed(), h.modStrict(this, t);\n    }, t.prototype.squaredDifference = function (t) {\n      return this.throwIfDisposed(), h.squaredDifference(this, t);\n    }, t.prototype.squaredDifferenceStrict = function (t) {\n      return this.throwIfDisposed(), h.squaredDifferenceStrict(this, t);\n    }, t.prototype.transpose = function (t) {\n      return this.throwIfDisposed(), h.transpose(this, t);\n    }, t.prototype.notEqual = function (t) {\n      return this.throwIfDisposed(), h.notEqual(this, t);\n    }, t.prototype.notEqualStrict = function (t) {\n      return this.throwIfDisposed(), h.notEqualStrict(this, t);\n    }, t.prototype.less = function (t) {\n      return this.throwIfDisposed(), h.less(this, t);\n    }, t.prototype.lessStrict = function (t) {\n      return this.throwIfDisposed(), h.lessStrict(this, t);\n    }, t.prototype.equal = function (t) {\n      return this.throwIfDisposed(), h.equal(this, t);\n    }, t.prototype.equalStrict = function (t) {\n      return this.throwIfDisposed(), h.equalStrict(this, t);\n    }, t.prototype.lessEqual = function (t) {\n      return this.throwIfDisposed(), h.lessEqual(this, t);\n    }, t.prototype.lessEqualStrict = function (t) {\n      return this.throwIfDisposed(), h.lessEqualStrict(this, t);\n    }, t.prototype.greater = function (t) {\n      return this.throwIfDisposed(), h.greater(this, t);\n    }, t.prototype.greaterStrict = function (t) {\n      return this.throwIfDisposed(), h.greaterStrict(this, t);\n    }, t.prototype.greaterEqual = function (t) {\n      return this.throwIfDisposed(), h.greaterEqual(this, t);\n    }, t.prototype.greaterEqualStrict = function (t) {\n      return this.throwIfDisposed(), h.greaterEqualStrict(this, t);\n    }, t.prototype.logicalAnd = function (t) {\n      return this.throwIfDisposed(), h.logicalAnd(this, t);\n    }, t.prototype.logicalOr = function (t) {\n      return this.throwIfDisposed(), h.logicalOr(this, t);\n    }, t.prototype.logicalNot = function () {\n      return this.throwIfDisposed(), h.logicalNot(this);\n    }, t.prototype.logicalXor = function (t) {\n      return this.throwIfDisposed(), h.logicalXor(this, t);\n    }, t.prototype.where = function (t, r) {\n      return this.throwIfDisposed(), h.where(t, this, r);\n    }, t.prototype.neg = function () {\n      return this.throwIfDisposed(), h.neg(this);\n    }, t.prototype.ceil = function () {\n      return this.throwIfDisposed(), h.ceil(this);\n    }, t.prototype.floor = function () {\n      return this.throwIfDisposed(), h.floor(this);\n    }, t.prototype.sign = function () {\n      return this.throwIfDisposed(), h.sign(this);\n    }, t.prototype.exp = function () {\n      return this.throwIfDisposed(), h.exp(this);\n    }, t.prototype.expm1 = function () {\n      return this.throwIfDisposed(), h.expm1(this);\n    }, t.prototype.log = function () {\n      return this.throwIfDisposed(), h.log(this);\n    }, t.prototype.log1p = function () {\n      return this.throwIfDisposed(), h.log1p(this);\n    }, t.prototype.sqrt = function () {\n      return this.throwIfDisposed(), h.sqrt(this);\n    }, t.prototype.rsqrt = function () {\n      return this.throwIfDisposed(), h.rsqrt(this);\n    }, t.prototype.square = function () {\n      return this.throwIfDisposed(), h.square(this);\n    }, t.prototype.reciprocal = function () {\n      return this.throwIfDisposed(), h.reciprocal(this);\n    }, t.prototype.abs = function () {\n      return this.throwIfDisposed(), h.abs(this);\n    }, t.prototype.clipByValue = function (t, r) {\n      return this.throwIfDisposed(), h.clipByValue(this, t, r);\n    }, t.prototype.relu = function () {\n      return this.throwIfDisposed(), h.relu(this);\n    }, t.prototype.elu = function () {\n      return this.throwIfDisposed(), h.elu(this);\n    }, t.prototype.selu = function () {\n      return this.throwIfDisposed(), h.selu(this);\n    }, t.prototype.leakyRelu = function (t) {\n      return void 0 === t && (t = .2), this.throwIfDisposed(), h.leakyRelu(this, t);\n    }, t.prototype.prelu = function (t) {\n      return this.throwIfDisposed(), h.prelu(this, t);\n    }, t.prototype.sigmoid = function () {\n      return this.throwIfDisposed(), h.sigmoid(this);\n    }, t.prototype.logSigmoid = function () {\n      return this.throwIfDisposed(), h.logSigmoid(this);\n    }, t.prototype.softplus = function () {\n      return this.throwIfDisposed(), h.softplus(this);\n    }, t.prototype.zerosLike = function () {\n      return this.throwIfDisposed(), h.zerosLike(this);\n    }, t.prototype.onesLike = function () {\n      return this.throwIfDisposed(), h.onesLike(this);\n    }, t.prototype.sin = function () {\n      return this.throwIfDisposed(), h.sin(this);\n    }, t.prototype.cos = function () {\n      return this.throwIfDisposed(), h.cos(this);\n    }, t.prototype.tan = function () {\n      return this.throwIfDisposed(), h.tan(this);\n    }, t.prototype.asin = function () {\n      return this.throwIfDisposed(), h.asin(this);\n    }, t.prototype.acos = function () {\n      return this.throwIfDisposed(), h.acos(this);\n    }, t.prototype.atan = function () {\n      return this.throwIfDisposed(), h.atan(this);\n    }, t.prototype.sinh = function () {\n      return this.throwIfDisposed(), h.sinh(this);\n    }, t.prototype.cosh = function () {\n      return this.throwIfDisposed(), h.cosh(this);\n    }, t.prototype.tanh = function () {\n      return this.throwIfDisposed(), h.tanh(this);\n    }, t.prototype.asinh = function () {\n      return this.throwIfDisposed(), h.asinh(this);\n    }, t.prototype.acosh = function () {\n      return this.throwIfDisposed(), h.acosh(this);\n    }, t.prototype.atanh = function () {\n      return this.throwIfDisposed(), h.atanh(this);\n    }, t.prototype.erf = function () {\n      return this.throwIfDisposed(), h.erf(this);\n    }, t.prototype.round = function () {\n      return this.throwIfDisposed(), h.round(this);\n    }, t.prototype.step = function (t) {\n      return void 0 === t && (t = 0), this.throwIfDisposed(), h.step(this, t);\n    }, t.prototype.softmax = function (t) {\n      return void 0 === t && (t = -1), this.throwIfDisposed(), h.softmax(this, t);\n    }, t.prototype.logSoftmax = function (t) {\n      return void 0 === t && (t = -1), this.throwIfDisposed(), h.logSoftmax(this, t);\n    }, t.prototype.resizeBilinear = function (t, r) {\n      return void 0 === r && (r = !1), this.throwIfDisposed(), h.image.resizeBilinear(this, t, r);\n    }, t.prototype.resizeNearestNeighbor = function (t, r) {\n      return void 0 === r && (r = !1), this.throwIfDisposed(), h.image.resizeNearestNeighbor(this, t, r);\n    }, t.prototype.conv1d = function (t, r, e, n, o, i) {\n      return void 0 === n && (n = \"NWC\"), void 0 === o && (o = 1), this.throwIfDisposed(), h.conv1d(this, t, r, e, n, o, i);\n    }, t.prototype.conv2d = function (t, r, e, n, o, i) {\n      return void 0 === n && (n = \"NHWC\"), void 0 === o && (o = [1, 1]), this.throwIfDisposed(), h.conv2d(this, t, r, e, n, o, i);\n    }, t.prototype.conv2dTranspose = function (t, r, e, n, o) {\n      return this.throwIfDisposed(), h.conv2dTranspose(this, t, r, e, n, o);\n    }, t.prototype.depthwiseConv2D = function (t, r, e, n, o, i) {\n      return void 0 === n && (n = \"NHWC\"), void 0 === o && (o = [1, 1]), this.throwIfDisposed(), h.depthwiseConv2d(this, t, r, e, n, o, i);\n    }, t.prototype.separableConv2d = function (t, r, e, n, o, i) {\n      return void 0 === o && (o = [1, 1]), void 0 === i && (i = \"NHWC\"), this.throwIfDisposed(), h.separableConv2d(this, t, r, e, n, o, i);\n    }, t.prototype.avgPool = function (t, r, e, n) {\n      return this.throwIfDisposed(), h.avgPool(this, t, r, e, n);\n    }, t.prototype.maxPool = function (t, r, e, n) {\n      return this.throwIfDisposed(), h.maxPool(this, t, r, e, n);\n    }, t.prototype.localResponseNormalization = function (t, r, e, n) {\n      return void 0 === t && (t = 5), void 0 === r && (r = 1), void 0 === e && (e = 1), void 0 === n && (n = .5), h.localResponseNormalization(this, t, r, e, n);\n    }, t.prototype.pool = function (t, r, e, n, o) {\n      return this.throwIfDisposed(), h.pool(this, t, r, e, n, o);\n    }, t.prototype.variable = function (t, r, e) {\n      return void 0 === t && (t = !0), this.throwIfDisposed(), l.variable(this, t, r, e);\n    }, t.prototype.unsortedSegmentSum = function (t, r) {\n      return this.throwIfDisposed(), h.unsortedSegmentSum(this, t, r);\n    }, t.prototype.batchToSpaceND = function (t, r) {\n      return this.throwIfDisposed(), h.batchToSpaceND(this, t, r);\n    }, t.prototype.spaceToBatchND = function (t, r) {\n      return this.throwIfDisposed(), h.spaceToBatchND(this, t, r);\n    }, t.prototype.topk = function (t, r) {\n      return void 0 === t && (t = 1), void 0 === r && (r = !0), this.throwIfDisposed(), h.topk(this, t, r);\n    }, t.prototype.stridedSlice = function (t, r, e, n, o) {\n      return void 0 === n && (n = 0), void 0 === o && (o = 0), this.throwIfDisposed(), h.stridedSlice(this, t, r, e, n, o);\n    }, t.prototype.depthToSpace = function (t, r) {\n      return this.throwIfDisposed(), h.depthToSpace(this, t, r);\n    }, t.prototype.fft = function () {\n      return this.throwIfDisposed(), h.spectral.fft(this);\n    }, t.prototype.ifft = function () {\n      return this.throwIfDisposed(), h.spectral.ifft(this);\n    }, t;\n  }();\n\n  r.Tensor = c, Object.defineProperty(c, Symbol.hasInstance, {\n    value: function value(t) {\n      return !!t && null != t.shape && null != t.dtype;\n    }\n  });\n\n  var l = function (t) {\n    function r(r, e, n) {\n      void 0 === e && (e = !0);\n      var o = t.call(this, r.shape, r.dtype, null, r.dataId) || this;\n      o.trainable = e, o.name = n, null == o.name && (o.name = u().nextVariableId().toString());\n\n      try {\n        u().registerVariable(o);\n      } catch (t) {\n        throw u().disposeTensor(o), t;\n      }\n\n      return o;\n    }\n\n    return n(r, t), r.variable = function (t, e, n, o) {\n      return void 0 === e && (e = !0), null != o && o !== t.dtype && (t = t.asType(o)), new r(t, e, n);\n    }, r.prototype.assign = function (t) {\n      if (t.dtype !== this.dtype) throw new Error(\"dtype of the new value (\" + t.dtype + \") and previous value (\" + this.dtype + \") must match\");\n      if (!util$1.arraysEqual(t.shape, this.shape)) throw new Error(\"shape of the new value (\" + t.shape + \") and previous value (\" + this.shape + \") must match\");\n      u().disposeTensor(this), this.dataId = t.dataId, u().registerTensor(this);\n    }, r;\n  }(c);\n\n  r.Variable = l, Object.defineProperty(l, Symbol.hasInstance, {\n    value: function value(t) {\n      return t instanceof c && null != t.assign && t.assign instanceof Function;\n    }\n  });\n  var f = l.variable;\n  r.variable = f;\n});\nunwrapExports(tensor);\nvar tensor_1 = tensor.TensorBuffer,\n    tensor_2 = tensor.setTensorTracker,\n    tensor_3 = tensor.setOpHandler,\n    tensor_4 = tensor.Tensor,\n    tensor_5 = tensor.Variable,\n    tensor_6 = tensor.variable,\n    tensor_util = createCommonjsModule(function (t, r) {\n  Object.defineProperty(r, \"__esModule\", {\n    value: !0\n  }), r.assertTypesMatch = function (t, r) {\n    util$1.assert(t.dtype === r.dtype, \"The dtypes of the first(\" + t.dtype + \") and second(\" + r.dtype + \") input must match\");\n  }, r.isTensorInList = function (t, r) {\n    for (var e = 0; e < r.length; e++) {\n      if (r[e].id === t.id) return !0;\n    }\n\n    return !1;\n  }, r.flattenNameArrayMap = function (t, r) {\n    var e = [];\n    if (t instanceof tensor.Tensor) e.push(t);else for (var n = t, o = 0; o < r.length; o++) {\n      e.push(n[r[o]]);\n    }\n    return e;\n  }, r.unflattenToNameArrayMap = function (t, r) {\n    if (t.length !== r.length) throw new Error(\"Cannot unflatten Tensor[], keys and arrays are not of same length.\");\n\n    for (var e = {}, n = 0; n < t.length; n++) {\n      e[t[n]] = r[n];\n    }\n\n    return e;\n  }, r.getTensorsInContainer = function (t) {\n    var r = [];\n    return function t(r, e, n) {\n      if (null != r) if (r instanceof tensor.Tensor) e.push(r);else if (o = r, Array.isArray(o) || \"object\" == typeof o) {\n        var o,\n            i = r;\n\n        for (var s in i) {\n          var a = i[s];\n          n.has(a) || (n.add(a), t(a, e, n));\n        }\n      }\n    }(t, r, new Set()), r;\n  };\n});\nunwrapExports(tensor_util);\nvar tensor_util_1 = tensor_util.assertTypesMatch,\n    tensor_util_2 = tensor_util.isTensorInList,\n    tensor_util_3 = tensor_util.flattenNameArrayMap,\n    tensor_util_4 = tensor_util.unflattenToNameArrayMap,\n    tensor_util_5 = tensor_util.getTensorsInContainer;\n\nfunction deepMapInternal(t, r, e, n) {\n  if (void 0 === e && (e = new Map()), void 0 === n && (n = new Set()), null == t) return null;\n  if (n.has(t)) throw new Error(\"Circular references are not supported.\");\n  if (e.has(t)) return e.get(t);\n  var o = r(t);\n  if (o.recurse && null !== o.value) throw new Error(\"A deep map function may not return both a value and recurse=true.\");\n\n  if (o.recurse) {\n    if (isIterable(t)) {\n      var i = Array.isArray(t) ? [] : {};\n\n      for (var s in n.add(t), t) {\n        var a = deepMapInternal(t[s], r, e, n);\n        i[s] = a;\n      }\n\n      return n.delete(t), i;\n    }\n\n    throw new Error(\"Can't recurse into non-iterable type: \" + t);\n  }\n\n  return e.set(t, o.value), o.value;\n}\n\nfunction deepZip(t, r) {\n  return void 0 === r && (r = zipToList), deepZipInternal(t, r);\n}\n\nfunction deepZipInternal(t, r, e) {\n  void 0 === e && (e = new Set());\n  var n = t[0];\n  if (e.has(n)) throw new Error(\"Circular references are not supported.\");\n  var o = r(t);\n  if (o.recurse && null !== o.value) throw new Error(\"A deep zip function may not return both a value and recurse=true.\");\n\n  if (o.recurse) {\n    if (isIterable(n)) {\n      var i = Array.isArray(n) ? [] : {};\n      e.add(n);\n\n      var s = function s(n) {\n        var o = deepZipInternal(t.map(function (t) {\n          return t[n];\n        }), r, e);\n        i[n] = o;\n      };\n\n      for (var a in n) {\n        s(a);\n      }\n\n      return e.delete(n), i;\n    }\n\n    throw new Error(\"Can't recurse into non-iterable type: \" + n);\n  }\n\n  return o.value;\n}\n\nfunction zipToList(t) {\n  return null === t ? null : isIterable(t[0]) ? {\n    value: null,\n    recurse: !0\n  } : {\n    value: t,\n    recurse: !1\n  };\n}\n\nfunction deepMapAndAwaitAll(t, r) {\n  return __awaiter(this, void 0, void 0, function () {\n    var e, n, o, i, s, a;\n    return __generator(this, function (u) {\n      switch (u.label) {\n        case 0:\n          e = new Map(), deepMapInternal(t, r, e), n = 0, o = Array.from(e.keys()), u.label = 1;\n\n        case 1:\n          return n < o.length ? (i = o[n], (s = e.get(i)) instanceof Promise ? [4, s] : [3, 3]) : [3, 4];\n\n        case 2:\n          a = u.sent(), e.set(i, a), u.label = 3;\n\n        case 3:\n          return n++, [3, 1];\n\n        case 4:\n          return [2, deepMapInternal(t, r, e)];\n      }\n    });\n  });\n}\n\nfunction isIterable(t) {\n  return null != t && (Array.isArray(t) || \"object\" == typeof t && !(t instanceof Tensor));\n}\n\nfunction isNumericArray(t) {\n  if (null == t) return !1;\n  if (!Array.isArray(t)) return !1;\n\n  for (var r in t) {\n    if (\"number\" != typeof t[r]) return !1;\n  }\n\n  return !0;\n}\n\nvar RingBuffer = function () {\n  function t(t) {\n    if (this.capacity = t, this.begin = 0, this.end = 0, t < 1) throw new RangeError(\"Can't create ring buffer of capacity < 1.\");\n    this.data = new Array(t), this.doubledCapacity = 2 * t;\n  }\n\n  return t.prototype.wrap = function (t) {\n    for (; t < 0;) {\n      t += this.doubledCapacity;\n    }\n\n    return t % this.doubledCapacity;\n  }, t.prototype.get = function (t) {\n    if (t < 0) throw new RangeError(\"Can't get item at a negative index.\");\n    return this.data[t % this.capacity];\n  }, t.prototype.set = function (t, r) {\n    if (t < 0) throw new RangeError(\"Can't set item at a negative index.\");\n    this.data[t % this.capacity] = r;\n  }, t.prototype.length = function () {\n    var t = this.end - this.begin;\n    return t < 0 && (t = this.doubledCapacity + t), t;\n  }, t.prototype.isFull = function () {\n    return this.length() === this.capacity;\n  }, t.prototype.isEmpty = function () {\n    return 0 === this.length();\n  }, t.prototype.push = function (t) {\n    if (this.isFull()) throw new RangeError(\"Ring buffer is full.\");\n    this.set(this.end, t), this.end = this.wrap(this.end + 1);\n  }, t.prototype.pushAll = function (t) {\n    for (var r = 0, e = t; r < e.length; r++) {\n      var n = e[r];\n      this.push(n);\n    }\n  }, t.prototype.pop = function () {\n    if (this.isEmpty()) throw new RangeError(\"Ring buffer is empty.\");\n    this.end = this.wrap(this.end - 1);\n    var t = this.get(this.end);\n    return this.set(this.end, void 0), t;\n  }, t.prototype.unshift = function (t) {\n    if (this.isFull()) throw new RangeError(\"Ring buffer is full.\");\n    this.begin = this.wrap(this.begin - 1), this.set(this.begin, t);\n  }, t.prototype.shift = function () {\n    if (this.isEmpty()) throw new RangeError(\"Ring buffer is empty.\");\n    var t = this.get(this.begin);\n    return this.set(this.begin, void 0), this.begin = this.wrap(this.begin + 1), t;\n  }, t.prototype.shuffleExcise = function (t) {\n    if (this.isEmpty()) throw new RangeError(\"Ring buffer is empty.\");\n    var r = this.wrap(this.begin + t),\n        e = this.get(r);\n    return this.set(r, this.pop()), e;\n  }, t;\n}(),\n    GrowingRingBuffer = function (t) {\n  function r() {\n    return t.call(this, r.INITIAL_CAPACITY) || this;\n  }\n\n  return __extends(r, t), r.prototype.isFull = function () {\n    return !1;\n  }, r.prototype.push = function (r) {\n    t.prototype.isFull.call(this) && this.expand(), t.prototype.push.call(this, r);\n  }, r.prototype.unshift = function (r) {\n    t.prototype.isFull.call(this) && this.expand(), t.prototype.unshift.call(this, r);\n  }, r.prototype.expand = function () {\n    for (var t = 2 * this.capacity, r = new Array(t), e = this.length(), n = 0; n < e; n++) {\n      r[n] = this.get(this.wrap(this.begin + n));\n    }\n\n    this.data = r, this.capacity = t, this.doubledCapacity = 2 * this.capacity, this.begin = 0, this.end = e;\n  }, r.INITIAL_CAPACITY = 32, r;\n}(RingBuffer);\n\nfunction iteratorFromItems(t) {\n  return new ArrayIterator(t);\n}\n\nfunction iteratorFromFunction(t) {\n  return new FunctionCallIterator(t);\n}\n\nfunction iteratorFromConcatenated(t, r) {\n  return new ChainedIterator(t, r);\n}\n\nfunction iteratorFromZipped(t, r) {\n  return void 0 === r && (r = ZipMismatchMode.FAIL), new ZipIterator(t, r);\n}\n\nvar ZipMismatchMode,\n    LazyIterator = function () {\n  function t() {}\n\n  return t.prototype.collect = function (t, r) {\n    return void 0 === t && (t = 1e3), void 0 === r && (r = 100), __awaiter(this, void 0, void 0, function () {\n      var e, n, o, i;\n      return __generator(this, function (s) {\n        switch (s.label) {\n          case 0:\n            return e = r > 0 ? this.prefetch(r) : this, n = [], o = 0, [4, e.next()];\n\n          case 1:\n            i = s.sent(), s.label = 2;\n\n          case 2:\n            return i.done ? [3, 4] : (n.push(i.value), ++o >= t ? [2, n] : [4, e.next()]);\n\n          case 3:\n            return i = s.sent(), [3, 2];\n\n          case 4:\n            return [2, n];\n        }\n      });\n    });\n  }, t.prototype.resolveFully = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return [4, this.next()];\n\n          case 1:\n            t = r.sent(), r.label = 2;\n\n          case 2:\n            return t.done ? [3, 4] : [4, this.next()];\n\n          case 3:\n            return t = r.sent(), [3, 2];\n\n          case 4:\n            return [2];\n        }\n      });\n    });\n  }, t.prototype.resolveWhile = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      var r, e;\n      return __generator(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, this.next()];\n\n          case 1:\n            r = n.sent(), e = t(r.value), n.label = 2;\n\n          case 2:\n            return r.done || !e ? [3, 4] : [4, this.next()];\n\n          case 3:\n            return r = n.sent(), e = t(r.value), [3, 2];\n\n          case 4:\n            return [2];\n        }\n      });\n    });\n  }, t.prototype.handleErrors = function (t) {\n    return new ErrorHandlingLazyIterator(this, t);\n  }, t.prototype.filter = function (t) {\n    return new FilterIterator(this, t);\n  }, t.prototype.map = function (t) {\n    return new MapIterator(this, t);\n  }, t.prototype.mapAsync = function (t) {\n    return new AsyncMapIterator(this, t);\n  }, t.prototype.serialMapAsync = function (t) {\n    return new AsyncMapIterator(this, t).serial();\n  }, t.prototype.flatmap = function (t) {\n    return new FlatmapIterator(this, t);\n  }, t.prototype.forEach = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (r) {\n        return [2, this.map(t).resolveFully()];\n      });\n    });\n  }, t.prototype.serialForEach = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (r) {\n        return [2, this.serialMapAsync(t).resolveWhile(function (t) {\n          return !0 === t;\n        })];\n      });\n    });\n  }, t.prototype.rowMajorBatch = function (t, r) {\n    return void 0 === r && (r = !0), new RowMajorBatchIterator(this, t, r);\n  }, t.prototype.columnMajorBatch = function (t, r, e) {\n    return void 0 === r && (r = !0), void 0 === e && (e = zipToList), this.rowMajorBatch(t, r).map(function (t) {\n      return deepZip(t, e);\n    });\n  }, t.prototype.concatenate = function (t, r) {\n    return new ChainedIterator(iteratorFromItems([this, t]), r);\n  }, t.prototype.take = function (t) {\n    return t < 0 || null == t ? this : new TakeIterator(this, t);\n  }, t.prototype.skip = function (t) {\n    return t < 0 || null == t ? this : new SkipIterator(this, t);\n  }, t.prototype.prefetch = function (t) {\n    return new PrefetchIterator(this, t);\n  }, t.prototype.shuffle = function (t, r) {\n    return new ShuffleIterator(this, t, r);\n  }, t.prototype.serial = function () {\n    return new SerialIterator(this);\n  }, t;\n}(),\n    ArrayIterator = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.items = r, e.trav = 0, e;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return \"Array of \" + this.items.length + \" items\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        return this.trav >= this.items.length ? [2, {\n          value: null,\n          done: !0\n        }] : (t = this.items[this.trav], this.trav++, [2, {\n          value: t,\n          done: !1\n        }]);\n      });\n    });\n  }, r;\n}(LazyIterator),\n    FunctionCallIterator = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.nextFn = r, e;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return \"Function call\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        try {\n          return [2, this.nextFn()];\n        } catch (t) {\n          throw t.message = \"Error thrown while iterating through a dataset: \" + t.message, t;\n        }\n\n        return [2];\n      });\n    });\n  }, r;\n}(LazyIterator),\n    SerialIterator = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.upstream = r, e.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), e;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Serial\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return [2, this.upstream.next()];\n      });\n    });\n  }, r;\n}(LazyIterator),\n    SkipIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.maxCount = e, n.count = 0, n.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Skip\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return this.count++ < this.maxCount ? [4, this.upstream.next()] : [3, 2];\n\n          case 1:\n            return (t = r.sent()).done ? [2, t] : (dispose(t.value), [3, 0]);\n\n          case 2:\n            return [2, this.upstream.next()];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    TakeIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.maxCount = e, n.count = 0, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Take\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return this.count++ >= this.maxCount ? [2, {\n          value: null,\n          done: !0\n        }] : [2, this.upstream.next()];\n      });\n    });\n  }, r;\n}(LazyIterator),\n    RowMajorBatchIterator = function (t) {\n  function r(r, e, n) {\n    void 0 === n && (n = !0);\n    var o = t.call(this) || this;\n    return o.upstream = r, o.batchSize = e, o.enableSmallLastBatch = n, o.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), o;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> RowMajorBatch\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r;\n      return __generator(this, function (e) {\n        switch (e.label) {\n          case 0:\n            t = [], e.label = 1;\n\n          case 1:\n            return t.length < this.batchSize ? [4, this.upstream.next()] : [3, 3];\n\n          case 2:\n            return (r = e.sent()).done ? this.enableSmallLastBatch && t.length > 0 ? [2, {\n              value: t,\n              done: !1\n            }] : [2, {\n              value: null,\n              done: !0\n            }] : (t.push(r.value), [3, 1]);\n\n          case 3:\n            return [2, {\n              value: t,\n              done: !1\n            }];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    FilterIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.predicate = e, n.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Filter\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            return (t = r.sent()).done || this.predicate(t.value) ? [2, t] : (dispose(t.value), [3, 0]);\n\n          case 2:\n            return [2];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    MapIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.transform = e, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Map\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o, i, s;\n      return __generator(this, function (a) {\n        switch (a.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            if ((t = a.sent()).done) return [2, {\n              value: null,\n              done: !0\n            }];\n\n            for (r = tensor_util_5(t.value), e = this.transform(t.value), n = tensor_util_5(e), o = 0, i = r; o < i.length; o++) {\n              s = i[o], tensor_util_2(s, n) || s.dispose();\n            }\n\n            return [2, {\n              value: e,\n              done: !1\n            }];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    ErrorHandlingLazyIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.handler = e, n.count = 0, n.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> handleErrors\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            r.label = 1;\n\n          case 1:\n            return r.trys.push([1, 3,, 4]), [4, this.upstream.next()];\n\n          case 2:\n            return [2, r.sent()];\n\n          case 3:\n            return t = r.sent(), this.handler(t) ? [3, 4] : [2, {\n              value: null,\n              done: !0\n            }];\n\n          case 4:\n            return [3, 0];\n\n          case 5:\n            return [2];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    AsyncMapIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.transform = e, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> AsyncMap\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o, i, s;\n      return __generator(this, function (a) {\n        switch (a.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            return (t = a.sent()).done ? [2, {\n              value: null,\n              done: !0\n            }] : (r = tensor_util_5(t.value), [4, this.transform(t.value)]);\n\n          case 2:\n            for (e = a.sent(), n = tensor_util_5(e), o = 0, i = r; o < i.length; o++) {\n              s = i[o], tensor_util_2(s, n) || s.dispose();\n            }\n\n            return [2, {\n              value: e,\n              done: !1\n            }];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    OneToManyIterator = function (t) {\n  function r() {\n    var r = t.call(this) || this;\n    return r.outputQueue = new GrowingRingBuffer(), r.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), r;\n  }\n\n  return __extends(r, t), r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return 0 !== this.outputQueue.length() ? [3, 2] : [4, this.pump()];\n\n          case 1:\n            return t.sent() ? [3, 0] : [2, {\n              value: null,\n              done: !0\n            }];\n\n          case 2:\n            return [2, {\n              value: this.outputQueue.shift(),\n              done: !1\n            }];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    FlatmapIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.transform = e, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Flatmap\";\n  }, r.prototype.pump = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o, i, s;\n      return __generator(this, function (a) {\n        switch (a.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            if ((t = a.sent()).done) return [2, !1];\n\n            for (r = tensor_util_5(t.value), e = this.transform(t.value), n = tensor_util_5(e), this.outputQueue.pushAll(e), o = 0, i = r; o < i.length; o++) {\n              s = i[o], tensor_util_2(s, n) || s.dispose();\n            }\n\n            return [2, !0];\n        }\n      });\n    });\n  }, r;\n}(OneToManyIterator),\n    ChainedIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.baseErrorHandler = e, n.lastRead = null, n.iterator = null, n.moreIterators = r, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return \"TODO: fill in upstream of chained summaries -> Chained\";\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return this.lastRead = this.readFromChain(this.lastRead), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.readFromChain = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      var r, e;\n      return __generator(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, t];\n\n          case 1:\n            return n.sent(), null != this.iterator ? [3, 3] : [4, this.moreIterators.next()];\n\n          case 2:\n            if ((r = n.sent()).done) return [2, {\n              value: null,\n              done: !0\n            }];\n            this.iterator = r.value, null != this.baseErrorHandler && (this.iterator = this.iterator.handleErrors(this.baseErrorHandler)), n.label = 3;\n\n          case 3:\n            return [4, this.iterator.next()];\n\n          case 4:\n            return (e = n.sent()).done ? (this.iterator = null, [2, this.readFromChain(t)]) : [2, e];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator);\n\n!function (t) {\n  t[t.FAIL = 0] = \"FAIL\", t[t.SHORTEST = 1] = \"SHORTEST\", t[t.LONGEST = 2] = \"LONGEST\";\n}(ZipMismatchMode || (ZipMismatchMode = {}));\n\nvar ZipIterator = function (t) {\n  function r(r, e) {\n    void 0 === e && (e = ZipMismatchMode.FAIL);\n    var n = t.call(this) || this;\n    return n.iterators = r, n.mismatchMode = e, n.count = 0, n.currentPromise = null, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return \"{TODO: fill in upstream of zip summaries} -> Zip\";\n  }, r.prototype.nextState = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      function r(t) {\n        return t instanceof LazyIterator ? {\n          value: t.next().then(function (t) {\n            return e++, t.done && n++, t.value;\n          }),\n          recurse: !1\n        } : {\n          value: null,\n          recurse: !0\n        };\n      }\n\n      var e, n, o;\n      return __generator(this, function (i) {\n        switch (i.label) {\n          case 0:\n            return [4, t];\n\n          case 1:\n            return i.sent(), e = 0, n = 0, [4, deepMapAndAwaitAll(this.iterators, r)];\n\n          case 2:\n            if (o = i.sent(), e === n) return [2, {\n              value: null,\n              done: !0\n            }];\n            if (n > 0) switch (this.mismatchMode) {\n              case ZipMismatchMode.FAIL:\n                throw new Error(\"Zipped streams should have the same length. Mismatched at element \" + this.count + \".\");\n\n              case ZipMismatchMode.SHORTEST:\n                return [2, {\n                  value: null,\n                  done: !0\n                }];\n\n              case ZipMismatchMode.LONGEST:\n            }\n            return this.count++, [2, {\n              value: o,\n              done: !1\n            }];\n        }\n      });\n    });\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return this.currentPromise = this.nextState(this.currentPromise), [4, this.currentPromise];\n\n          case 1:\n            return [2, t.sent()];\n        }\n      });\n    });\n  }, r;\n}(LazyIterator),\n    PrefetchIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.bufferSize = e, n.buffer = new RingBuffer(e), n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Prefetch\";\n  }, r.prototype.refill = function () {\n    for (; !this.buffer.isFull();) {\n      var t = this.upstream.next();\n      this.buffer.push(t);\n    }\n  }, r.prototype.next = function () {\n    return this.refill(), this.buffer.shift();\n  }, r;\n}(LazyIterator),\n    ShuffleIterator = function (t) {\n  function r(r, e, n) {\n    var o = t.call(this, r, e) || this;\n    return o.upstream = r, o.windowSize = e, o.upstreamExhausted = !1, o.random = seedrandom_1(n || util.now().toString()), o.lastRead = Promise.resolve({\n      value: null,\n      done: !1\n    }), o;\n  }\n\n  return __extends(r, t), r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t = this;\n      return __generator(this, function (r) {\n        return this.lastRead = this.lastRead.then(function () {\n          return t.serialNext();\n        }), [2, this.lastRead];\n      });\n    });\n  }, r.prototype.randomInt = function (t) {\n    return Math.floor(this.random() * t);\n  }, r.prototype.chooseIndex = function () {\n    return this.randomInt(this.buffer.length());\n  }, r.prototype.serialNext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r;\n      return __generator(this, function (e) {\n        switch (e.label) {\n          case 0:\n            this.upstreamExhausted || this.refill(), e.label = 1;\n\n          case 1:\n            return this.buffer.isEmpty() ? [3, 3] : (t = this.chooseIndex(), [4, this.buffer.shuffleExcise(t)]);\n\n          case 2:\n            return (r = e.sent()).done ? (this.upstreamExhausted = !0, [3, 1]) : (this.refill(), [2, r]);\n\n          case 3:\n            return [2, {\n              value: null,\n              done: !0\n            }];\n        }\n      });\n    });\n  }, r;\n}(PrefetchIterator),\n    Dataset = function () {\n  function t() {}\n\n  return t.prototype.filter = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().filter(function (r) {\n                return tidy(function () {\n                  return t(r);\n                });\n              })];\n          }\n        });\n      });\n    });\n  }, t.prototype.map = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().map(function (r) {\n                return tidy(function () {\n                  return t(r);\n                });\n              })];\n          }\n        });\n      });\n    });\n  }, t.prototype.mapAsync = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().mapAsync(t)];\n          }\n        });\n      });\n    });\n  }, t.prototype.batch = function (t, r) {\n    var e = this;\n    void 0 === r && (r = !0);\n    var n = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(e, void 0, void 0, function () {\n        return __generator(this, function (e) {\n          switch (e.label) {\n            case 0:\n              return [4, n.iterator()];\n\n            case 1:\n              return [2, e.sent().columnMajorBatch(t, r, deepBatchConcat)];\n          }\n        });\n      });\n    });\n  }, t.prototype.concatenate = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        var r, n;\n        return __generator(this, function (o) {\n          switch (o.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return n = (r = o.sent()).concatenate, [4, t.iterator()];\n\n            case 2:\n              return [2, n.apply(r, [o.sent()])];\n          }\n        });\n      });\n    });\n  }, t.prototype.repeat = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        var r = this;\n        return __generator(this, function (n) {\n          return [2, iteratorFromConcatenated(iteratorFromFunction(function () {\n            return __awaiter(r, void 0, void 0, function () {\n              var t;\n              return __generator(this, function (r) {\n                switch (r.label) {\n                  case 0:\n                    return t = {}, [4, e.iterator()];\n\n                  case 1:\n                    return [2, (t.value = r.sent(), t.done = !1, t)];\n                }\n              });\n            });\n          }).take(t))];\n        });\n      });\n    });\n  }, t.prototype.take = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().take(t)];\n          }\n        });\n      });\n    });\n  }, t.prototype.skip = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().skip(t)];\n          }\n        });\n      });\n    });\n  }, t.prototype.shuffle = function (t, r, e) {\n    var n = this;\n    void 0 === e && (e = !0);\n    var o = this,\n        i = seedrandom_1(r || util.now().toString());\n    return datasetFromIteratorFn(function () {\n      return __awaiter(n, void 0, void 0, function () {\n        var r;\n        return __generator(this, function (n) {\n          switch (n.label) {\n            case 0:\n              return r = i.int32(), e && (r += i.int32()), [4, o.iterator()];\n\n            case 1:\n              return [2, n.sent().shuffle(t, r.toString())];\n          }\n        });\n      });\n    });\n  }, t.prototype.prefetch = function (t) {\n    var r = this,\n        e = this;\n    return datasetFromIteratorFn(function () {\n      return __awaiter(r, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          switch (r.label) {\n            case 0:\n              return [4, e.iterator()];\n\n            case 1:\n              return [2, r.sent().prefetch(t)];\n          }\n        });\n      });\n    });\n  }, t.prototype.collectAll = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return [4, this.iterator()];\n\n          case 1:\n            return [2, t.sent().collect()];\n        }\n      });\n    });\n  }, t.prototype.forEach = function (t) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return [4, this.iterator()];\n\n          case 1:\n            return [2, r.sent().forEach(t)];\n        }\n      });\n    });\n  }, t;\n}();\n\nfunction datasetFromIteratorFn(t) {\n  return new (function (r) {\n    function e() {\n      return null !== r && r.apply(this, arguments) || this;\n    }\n\n    return __extends(e, r), e.prototype.iterator = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (r) {\n          return [2, t()];\n        });\n      });\n    }, e;\n  }(Dataset))();\n}\n\nfunction array(t) {\n  var r = this;\n  return datasetFromIteratorFn(function () {\n    return __awaiter(r, void 0, void 0, function () {\n      return __generator(this, function (r) {\n        return [2, iteratorFromItems(t)];\n      });\n    });\n  });\n}\n\nfunction zip(t) {\n  var r = this;\n  if (!isIterable(t)) throw new Error(\"The argument to zip() must be an object or array.\");\n  return datasetFromIteratorFn(function () {\n    return __awaiter(r, void 0, void 0, function () {\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return [4, deepMapAndAwaitAll(t, function (t) {\n              if (t instanceof Dataset) return {\n                value: t.iterator(),\n                recurse: !1\n              };\n              if (isIterable(t)) return {\n                value: null,\n                recurse: !0\n              };\n              throw new Error(\"Leaves of the structure passed to zip() must be Datasets, not primitives.\");\n            })];\n\n          case 1:\n            return [2, iteratorFromZipped(r.sent(), ZipMismatchMode.SHORTEST)];\n        }\n      });\n    });\n  });\n}\n\nfunction deepBatchConcat(t) {\n  if (null === t) return null;\n  var r = t[0];\n  return \"string\" == typeof r ? {\n    value: t,\n    recurse: !1\n  } : isIterable(r) ? isNumericArray(r) ? {\n    value: batchConcat(t),\n    recurse: !1\n  } : {\n    value: null,\n    recurse: !0\n  } : {\n    value: batchConcat(t),\n    recurse: !1\n  };\n}\n\nfunction batchConcat(t) {\n  for (var r = shapeAndValues(t[0])[0], e = [t.length].concat(r), n = new Float32Array(e.reduce(function (t, r) {\n    return t * r;\n  })), o = 0, i = 0, s = t; i < s.length; i++) {\n    var a = shapeAndValues(s[i]),\n        u = a[0],\n        h = a[1];\n    if (!util.arraysEqual(u, r)) throw new Error(\"Elements must have the same shape to be batched\");\n    n.set(h, o), o += h.length;\n  }\n\n  return Tensor.make(e, {\n    values: n\n  });\n}\n\nfunction shapeAndValues(t) {\n  return t instanceof Tensor ? [t.shape, t.dataSync()] : Array.isArray(t) ? [[t.length], t] : [[], [t]];\n}\n\nvar TextLineDataset = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.input = r, e;\n  }\n\n  return __extends(r, t), r.prototype.iterator = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r;\n      return __generator(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return [4, this.input.iterator()];\n\n          case 1:\n            return t = e.sent(), r = t.decodeUTF8(), [2, r.split(\"\\n\")];\n        }\n      });\n    });\n  }, r;\n}(Dataset),\n    CODE_QUOTE = '\"',\n    STATE_OUT = Symbol(\"out\"),\n    STATE_FIELD = Symbol(\"field\"),\n    STATE_QUOTE = Symbol(\"quote\"),\n    STATE_QUOTE_AFTER_QUOTE = Symbol(\"quoteafterquote\"),\n    STATE_WITHIN_QUOTE_IN_QUOTE = Symbol(\"quoteinquote\"),\n    CSVDataset = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.input = r, n.hasHeader = !0, n.fullColumnNames = null, n.columnNamesValidated = !1, n.columnConfigs = null, n.configuredColumnsOnly = !1, n.delimiter = \",\", n.base = new TextLineDataset(r), e || (e = {}), n.hasHeader = !1 !== e.hasHeader, n.fullColumnNames = e.columnNames, n.columnConfigs = e.columnConfigs, n.configuredColumnsOnly = e.configuredColumnsOnly, n.delimiter = e.delimiter ? e.delimiter : \",\", n;\n  }\n\n  return __extends(r, t), r.prototype.columnNames = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        switch (t.label) {\n          case 0:\n            return this.columnNamesValidated ? [3, 2] : [4, this.setColumnNames()];\n\n          case 1:\n            t.sent(), t.label = 2;\n\n          case 2:\n            return [2, this.configuredColumnsOnly ? Object.keys(this.columnConfigs) : this.fullColumnNames];\n        }\n      });\n    });\n  }, r.prototype.setColumnNames = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o, i;\n      return __generator(this, function (s) {\n        switch (s.label) {\n          case 0:\n            return [4, this.maybeReadHeaderLine()];\n\n          case 1:\n            if (t = s.sent(), !this.fullColumnNames && !t) throw new Error(\"Column names must be provided if there is no header line.\");\n            if (this.fullColumnNames && t && util.assert(t.length === this.fullColumnNames.length, \"The length of provided columnNames (\" + this.fullColumnNames.length.toString() + \") does not match the length of the header line read from file (\" + t.length.toString() + \").\"), this.fullColumnNames || (this.fullColumnNames = t), r = this.fullColumnNames.reduce(function (t, r) {\n              return t[r] = t[r] + 1 || 1, t;\n            }, {}), e = Object.keys(r).filter(function (t) {\n              return r[t] > 1;\n            }), util.assert(0 === e.length, \"Duplicate column names found: \" + e.toString()), this.columnConfigs) for (n = 0, o = Object.keys(this.columnConfigs); n < o.length; n++) {\n              if (i = o[n], -1 === this.fullColumnNames.indexOf(i)) throw new Error('The key \"' + i + '\" provided in columnConfigs does not match any of the column names (' + this.fullColumnNames.toString() + \").\");\n            }\n            return this.columnNamesValidated = !0, [2];\n        }\n      });\n    });\n  }, r.prototype.maybeReadHeaderLine = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            return this.hasHeader ? [4, this.base.iterator()] : [3, 3];\n\n          case 1:\n            return [4, r.sent().next()];\n\n          case 2:\n            if ((t = r.sent()).done) throw new Error(\"No data was found for CSV parsing.\");\n            return [2, t.value.split(this.delimiter)];\n\n          case 3:\n            return [2, null];\n        }\n      });\n    });\n  }, r.prototype.iterator = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t,\n          r = this;\n      return __generator(this, function (e) {\n        switch (e.label) {\n          case 0:\n            return this.columnNamesValidated ? [3, 2] : [4, this.setColumnNames()];\n\n          case 1:\n            e.sent(), e.label = 2;\n\n          case 2:\n            return [4, this.base.iterator()];\n\n          case 3:\n            return t = e.sent(), this.hasHeader && (t = t.skip(1)), [2, t.map(function (t) {\n              return r.makeDataElement(t);\n            })];\n        }\n      });\n    });\n  }, r.prototype.makeDataElement = function (t) {\n    for (var r = this.parseRow(t), e = {}, n = {}, o = 0; o < this.fullColumnNames.length; o++) {\n      var i = this.fullColumnNames[o],\n          s = this.columnConfigs ? this.columnConfigs[i] : null;\n\n      if (!this.configuredColumnsOnly || s) {\n        var a = r[o],\n            u = null;\n        if (\"\" === a) {\n          if (s && void 0 !== s.default) u = s.default;else {\n            if (s && (s.required || s.isLabel)) throw new Error(\"Required column \" + i + \" is empty in this line: \" + t);\n            u = void 0;\n          }\n        } else {\n          var h = Number(a);\n          if (isNaN(h)) u = s && \"bool\" === s.dtype ? this.getBoolean(a) : a;else if (s && s.dtype) switch (s.dtype) {\n            case \"float32\":\n              u = h;\n              break;\n\n            case \"int32\":\n              u = Math.floor(h);\n              break;\n\n            case \"bool\":\n              u = this.getBoolean(a);\n              break;\n\n            default:\n              u = h;\n          } else u = h;\n        }\n        s && s.isLabel ? n[i] = u : e[i] = u;\n      }\n    }\n\n    return 0 === Object.keys(n).length ? e : [e, n];\n  }, r.prototype.getBoolean = function (t) {\n    return \"1\" === t || \"true\" === t.toLowerCase() ? 1 : 0;\n  }, r.prototype.parseRow = function (t) {\n    for (var r = [], e = 0, n = t.length, o = STATE_FIELD, i = 0; i < n; i++) {\n      switch (o) {\n        case STATE_OUT:\n          switch (t.charAt(i)) {\n            case CODE_QUOTE:\n              e = i + 1, o = STATE_QUOTE;\n              break;\n\n            case this.delimiter:\n              r.push(\"\"), o = STATE_OUT, e = i + 1;\n              break;\n\n            default:\n              o = STATE_FIELD, e = i;\n          }\n\n          break;\n\n        case STATE_FIELD:\n          switch (t.charAt(i)) {\n            case this.delimiter:\n              r.push(t.substring(e, i)), o = STATE_OUT, e = i + 1;\n          }\n\n          break;\n\n        case STATE_QUOTE:\n          switch (t.charAt(i)) {\n            case CODE_QUOTE:\n              o = STATE_QUOTE_AFTER_QUOTE;\n          }\n\n          break;\n\n        case STATE_QUOTE_AFTER_QUOTE:\n          switch (t.charAt(i)) {\n            case this.delimiter:\n              r.push(t.substring(e, i - 1)), o = STATE_OUT, e = i + 1;\n              break;\n\n            case CODE_QUOTE:\n              o = STATE_QUOTE;\n              break;\n\n            default:\n              o = STATE_WITHIN_QUOTE_IN_QUOTE;\n          }\n\n          break;\n\n        case STATE_WITHIN_QUOTE_IN_QUOTE:\n          switch (t.charAt(i)) {\n            case CODE_QUOTE:\n              o = STATE_QUOTE;\n          }\n\n      }\n    }\n\n    return o === STATE_QUOTE_AFTER_QUOTE ? r.push(t.substring(e, n - 1)) : r.push(t.substring(e)), r;\n  }, r;\n}(Dataset),\n    DataSource = function () {\n  return function () {};\n}(),\n    utf8 = createCommonjsModule(function (t, r) {\n  !function (e) {\n    var n = r,\n        o = t && t.exports == n && t,\n        i = \"object\" == typeof commonjsGlobal && commonjsGlobal;\n    i.global !== i && i.window !== i || (e = i);\n    var s,\n        a,\n        u,\n        h = String.fromCharCode;\n\n    function c(t) {\n      for (var r, e, n = [], o = 0, i = t.length; o < i;) {\n        (r = t.charCodeAt(o++)) >= 55296 && r <= 56319 && o < i ? 56320 == (64512 & (e = t.charCodeAt(o++))) ? n.push(((1023 & r) << 10) + (1023 & e) + 65536) : (n.push(r), o--) : n.push(r);\n      }\n\n      return n;\n    }\n\n    function l(t) {\n      if (t >= 55296 && t <= 57343) throw Error(\"Lone surrogate U+\" + t.toString(16).toUpperCase() + \" is not a scalar value\");\n    }\n\n    function f(t, r) {\n      return h(t >> r & 63 | 128);\n    }\n\n    function p(t) {\n      if (0 == (4294967168 & t)) return h(t);\n      var r = \"\";\n      return 0 == (4294965248 & t) ? r = h(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (l(t), r = h(t >> 12 & 15 | 224), r += f(t, 6)) : 0 == (4292870144 & t) && (r = h(t >> 18 & 7 | 240), r += f(t, 12), r += f(t, 6)), r += h(63 & t | 128);\n    }\n\n    function d() {\n      if (u >= a) throw Error(\"Invalid byte index\");\n      var t = 255 & s[u];\n      if (u++, 128 == (192 & t)) return 63 & t;\n      throw Error(\"Invalid continuation byte\");\n    }\n\n    function y() {\n      var t, r;\n      if (u > a) throw Error(\"Invalid byte index\");\n      if (u == a) return !1;\n      if (t = 255 & s[u], u++, 0 == (128 & t)) return t;\n\n      if (192 == (224 & t)) {\n        if ((r = (31 & t) << 6 | d()) >= 128) return r;\n        throw Error(\"Invalid continuation byte\");\n      }\n\n      if (224 == (240 & t)) {\n        if ((r = (15 & t) << 12 | d() << 6 | d()) >= 2048) return l(r), r;\n        throw Error(\"Invalid continuation byte\");\n      }\n\n      if (240 == (248 & t) && (r = (7 & t) << 18 | d() << 12 | d() << 6 | d()) >= 65536 && r <= 1114111) return r;\n      throw Error(\"Invalid UTF-8 detected\");\n    }\n\n    var v = {\n      version: \"2.1.2\",\n      encode: function encode(t) {\n        for (var r = c(t), e = r.length, n = -1, o = \"\"; ++n < e;) {\n          o += p(r[n]);\n        }\n\n        return o;\n      },\n      decode: function decode(t) {\n        s = c(t), a = s.length, u = 0;\n\n        for (var r, e = []; !1 !== (r = y());) {\n          e.push(r);\n        }\n\n        return function (t) {\n          for (var r, e = t.length, n = -1, o = \"\"; ++n < e;) {\n            (r = t[n]) > 65535 && (o += h((r -= 65536) >>> 10 & 1023 | 55296), r = 56320 | 1023 & r), o += h(r);\n          }\n\n          return o;\n        }(e);\n      }\n    };\n    if (n && !n.nodeType) {\n      if (o) o.exports = v;else {\n        var m = {}.hasOwnProperty;\n\n        for (var w in v) {\n          m.call(v, w) && (n[w] = v[w]);\n        }\n      }\n    } else e.utf8 = v;\n  }(commonjsGlobal);\n}),\n    utf8_1 = utf8.decode,\n    StringIterator = function (t) {\n  function r() {\n    return null !== t && t.apply(this, arguments) || this;\n  }\n\n  return __extends(r, t), r.prototype.split = function (t) {\n    return new SplitIterator(this, t);\n  }, r;\n}(LazyIterator),\n    SplitIterator = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.impl = new SplitIteratorImpl(r, e), n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.impl.summary();\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return [2, this.impl.next()];\n      });\n    });\n  }, r;\n}(StringIterator),\n    SplitIteratorImpl = function (t) {\n  function r(r, e) {\n    var n = t.call(this) || this;\n    return n.upstream = r, n.separator = e, n.carryover = \"\", n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Split('\" + this.separator + \"')\";\n  }, r.prototype.pump = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o;\n      return __generator(this, function (i) {\n        switch (i.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            if ((t = i.sent()).done) return \"\" === this.carryover ? [2, !1] : (this.outputQueue.push(this.carryover), this.carryover = \"\", [2, !0]);\n\n            for ((r = t.value.split(this.separator))[0] = this.carryover + r[0], e = 0, n = r.slice(0, -1); e < n.length; e++) {\n              o = n[e], this.outputQueue.push(o);\n            }\n\n            return this.carryover = r[r.length - 1], [2, !0];\n        }\n      });\n    });\n  }, r;\n}(OneToManyIterator),\n    ByteChunkIterator = function (t) {\n  function r() {\n    return null !== t && t.apply(this, arguments) || this;\n  }\n\n  return __extends(r, t), r.prototype.decodeUTF8 = function () {\n    return new Utf8Iterator(this);\n  }, r;\n}(LazyIterator),\n    Utf8Iterator = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.upstream = r, e.impl = new Utf8IteratorImpl(r), e;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.impl.summary();\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return [2, this.impl.next()];\n      });\n    });\n  }, r;\n}(StringIterator),\n    Utf8IteratorImpl = function (t) {\n  function r(r) {\n    var e = t.call(this) || this;\n    return e.upstream = r, e.partial = new Uint8Array([]), e.partialBytesValid = 0, e;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return this.upstream.summary() + \" -> Utf8\";\n  }, r.prototype.pump = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, r, e, n, o, i, s, a;\n      return __generator(this, function (u) {\n        switch (u.label) {\n          case 0:\n            return [4, this.upstream.next()];\n\n          case 1:\n            if ((t = u.sent()).done) {\n              if (0 === this.partial.length) return [2, !1];\n              r = new Uint8Array([]);\n            } else r = t.value;\n\n            for (e = this.partial.length - this.partialBytesValid, o = n = e, i = 0; n < r.length;) {\n              o = n, i = utfWidth(r[n]), n = o + i;\n            }\n\n            return n === r.length && (o = n), s = utf8_1(String.fromCharCode.apply(null, r.slice(e, o))), e > 0 ? (this.partial.set(r.slice(0, e), this.partialBytesValid), a = utf8_1(String.fromCharCode.apply(null, this.partial)), this.outputQueue.push(a + s)) : this.outputQueue.push(s), o === r.length ? (this.partial = new Uint8Array([]), this.partialBytesValid = 0) : (this.partial = new Uint8Array(new ArrayBuffer(i)), this.partial.set(r.slice(o), 0), this.partialBytesValid = r.length - o), [2, !0];\n        }\n      });\n    });\n  }, r;\n}(OneToManyIterator);\n\nfunction utfWidth(t) {\n  return t >= 252 ? 6 : t >= 248 ? 5 : t >= 240 ? 4 : t >= 224 ? 3 : t >= 192 ? 2 : 1;\n}\n\nvar FileChunkIterator = function (t) {\n  function r(r, e) {\n    void 0 === e && (e = {});\n    var n = t.call(this) || this;\n    return n.file = r, n.options = e, util.assert(r instanceof Uint8Array || !!ENV.get(\"IS_BROWSER\") && (r instanceof File || r instanceof Blob), \"FileChunkIterator only supports File, Blob and Uint8Array right now.\"), n.offset = e.offset || 0, n.chunkSize = e.chunkSize || 1048576, n;\n  }\n\n  return __extends(r, t), r.prototype.summary = function () {\n    return \"FileChunks \" + this.file;\n  }, r.prototype.next = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t,\n          r,\n          e = this;\n      return __generator(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return this.offset >= (this.file instanceof Uint8Array ? this.file.byteLength : this.file.size) ? [2, {\n              value: null,\n              done: !0\n            }] : (t = new Promise(function (t, r) {\n              var n = e.offset + e.chunkSize;\n              if (e.file instanceof Uint8Array) t(new Uint8Array(e.file.slice(e.offset, n)));else {\n                var o = new FileReader();\n                o.onload = function (e) {\n                  var n = o.result;\n                  if (n instanceof ArrayBuffer && (n = new Uint8Array(n)), !(n instanceof Uint8Array)) return r(new TypeError(\"FileReader returned unknown type.\"));\n                  t(n);\n                }, o.onabort = function (t) {\n                  return r(new Error(\"Aborted\"));\n                }, o.onerror = function (t) {\n                  return r(new Error(t.type));\n                };\n                var i = e.file.slice(e.offset, n);\n                o.readAsArrayBuffer(i);\n              }\n              e.offset = n;\n            }), r = {}, [4, t]);\n\n          case 1:\n            return [2, (r.value = n.sent(), r.done = !1, r)];\n        }\n      });\n    });\n  }, r;\n}(ByteChunkIterator);\n\nfunction urlChunkIterator(t, r) {\n  return void 0 === r && (r = {}), __awaiter(this, void 0, void 0, function () {\n    var e, n, o;\n    return __generator(this, function (i) {\n      switch (i.label) {\n        case 0:\n          return ENV.get(\"IS_BROWSER\") ? [4, fetch(t)] : [3, 5];\n\n        case 1:\n          return (e = i.sent()).ok ? [4, e.blob()] : [3, 3];\n\n        case 2:\n          return n = i.sent(), [2, new FileChunkIterator(n, r)];\n\n        case 3:\n          throw new Error(e.statusText);\n\n        case 4:\n          return [3, 9];\n\n        case 5:\n          if (\"string\" != typeof t) throw new Error(\"URL must be a string. Request objects are not supported in the node.js environment yet.\");\n          return [4, nodeFetch(t)];\n\n        case 6:\n          return (e = i.sent()).ok ? [4, e.buffer()] : [3, 8];\n\n        case 7:\n          return o = i.sent(), [2, new FileChunkIterator(o, r)];\n\n        case 8:\n          throw new Error(e.statusText);\n\n        case 9:\n          return [2];\n      }\n    });\n  });\n}\n\nvar URLDataSource = function (t) {\n  function r(r, e) {\n    void 0 === e && (e = {});\n    var n = t.call(this) || this;\n    return n.url = r, n.fileOptions = e, n;\n  }\n\n  return __extends(r, t), r.prototype.iterator = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return [2, urlChunkIterator(this.url, this.fileOptions)];\n      });\n    });\n  }, r;\n}(DataSource);\n\nfunction csv(t, r) {\n  return void 0 === r && (r = {}), new CSVDataset(new URLDataSource(t), r);\n}\n\nvar FileDataSource = function (t) {\n  function r(r, e) {\n    void 0 === e && (e = {});\n    var n = t.call(this) || this;\n    return n.input = r, n.options = e, n;\n  }\n\n  return __extends(r, t), r.prototype.iterator = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (t) {\n        return [2, new FileChunkIterator(this.input, this.options)];\n      });\n    });\n  }, r;\n}(DataSource),\n    version = \"0.1.2\";\n\nexport { array, Dataset, datasetFromIteratorFn, zip, CSVDataset, TextLineDataset, csv, FileDataSource, URLDataSource, version as version_data };","map":null,"metadata":{},"sourceType":"module"}